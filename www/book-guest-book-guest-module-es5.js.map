{"version":3,"sources":["src/app/book-guest/book-guest.page.html","src/app/book-guest/book-guest.module.ts","src/app/book-guest/book-guest.page.scss","src/app/book-guest/book-guest.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header no-border>\\n    <ion-toolbar color='primary'>\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-menu-button></ion-menu-button> -->\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Book a Guest</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"book-guest-content\\\">\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" (click)='bookGroupGuest()'>\\n        <ion-fab-button>\\n            <ion-icon name=\\\"people\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n    <ion-item>\\n\\n        <!-- <div class=\\\"import__contact\\\"> -->\\n        <h3 id=\\\"import_contact--text\\\" item-left>Import Contact From Your Device</h3>\\n        <ion-button id='import_contact--button' expand='block' fill='solid' (click)='importContact()'>\\n            <ion-icon name=\\\"person-add\\\"></ion-icon>\\n            <!-- Import Contact -->\\n        </ion-button>\\n        <!-- </div> -->\\n    </ion-item>\\n    <form [formGroup]=\\\"guestForm\\\" (ngSubmit)=\\\"bookGuest()\\\">\\n        <ion-list lines='full'>\\n            <!-- NAME -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Name</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" inputmode=\\\"text\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.name\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('name').hasError(validation.type) && (guestForm.get('name').dirty || guestForm.get('name').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- PHONE NUMBER -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Phone Number</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.phone\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('phone').hasError(validation.type) && (guestForm.get('phone').dirty || guestForm.get('phone').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- GENDER -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Gender</ion-label>\\n                <ion-select placeholder=\\\"Select One\\\" formControlName='gender'>\\n                    <ion-select-option value=\\\"f\\\">Female</ion-select-option>\\n                    <ion-select-option value=\\\"m\\\">Male</ion-select-option>\\n                    <ion-select-option value=\\\"other\\\">Other</ion-select-option>\\n                </ion-select>\\n                <!-- <ion-input type=\\\"text\\\" formControlName=\\\"phone\\\"></ion-input> -->\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.gender\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('gender').hasError(validation.type) && (guestForm.get('gender').dirty || guestForm.get('gender').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- VEHICLE MAKE -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Vehicle Make</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"vehicleMake\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.vehicleMake\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('vehicleMake').hasError(validation.type) && (guestForm.get('vehicleMake').dirty || guestForm.get('vehicleMake').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- VEHICLE REG NUMBER -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Vehicle Reg Number</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"vehicleRegNum\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.vehicleRegNum\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('vehicleRegNum').hasError(validation.type) && (guestForm.get('vehicleRegNum').dirty || guestForm.get('vehicleRegNum').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- VEHICLE COLOR -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Vehicle Color</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"vehicleColor\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.vehicleColor\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('vehicleColor').hasError(validation.type) && (guestForm.get('vehicleColor').dirty || guestForm.get('vehicleColor').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- COMMENTS -->\\n            <ion-item class=\\\"input-item\\\">\\n                <ion-label position=\\\"floating\\\">Comments</ion-label>\\n                <ion-input type=\\\"text\\\" formControlName=\\\"comments\\\"></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.comments\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"guestForm.get('comments').hasError(validation.type) && (guestForm.get('comments').dirty || guestForm.get('comments').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- <ion-item>\\n            <ion-label stacked>Name</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='fullname'></ion-input>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label stacked>Phone Number</ion-label>\\n            <ion-input type=\\\"tel\\\" [(ngModel)]='phone'></ion-input>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label>Gender</ion-label>\\n            <ion-select placeholder=\\\"Select One\\\" [(ngModel)]='gender'>\\n                <ion-select-option value=\\\"f\\\">Female</ion-select-option>\\n                <ion-select-option value=\\\"m\\\">Male</ion-select-option>\\n                <ion-select-option value=\\\"other\\\">Other</ion-select-option>\\n            </ion-select>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label stacked>Vehicle Make</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleMake'></ion-input>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label stacked>Vehicle Reg Number</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleRegNum'></ion-input>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label stacked>Vehicle Color</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleColor'></ion-input>\\n        </ion-item> -->\\n            <!-- <ion-item>\\n            <ion-label stacked>Comments</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='comments'></ion-input>\\n        </ion-item> -->\\n            <ion-item>\\n                <ion-label>Guest Confirmation</ion-label>\\n                <ion-toggle formControlName=\\\"isConfirmed\\\"></ion-toggle>\\n            </ion-item>\\n        </ion-list>\\n        <ion-button expand='block' fill='solid' (click)='bookGuest()' [disabled]='isLoading || !guestForm.valid'>\\n            <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n            <ion-text *ngIf='isLoading' style='margin-left: 30px !important'>Booking Guest...</ion-text>\\n            <ion-text *ngIf='!isLoading'>Book Guest</ion-text>\\n        </ion-button>\\n    </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookGuestPage } from './book-guest.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookGuestPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BookGuestPage]\n})\nexport class BookGuestPageModule {}\n","export default \"h3 {\\n  font-size: 16px !important;\\n  text-align: center;\\n  padding: 5px;\\n  color: var(--ion-color-medium);\\n}\\n\\n#import_contact--button {\\n  position: absolute;\\n  right: 20px;\\n  height: 40px;\\n  width: 40px;\\n  border-radius: 50%;\\n}\\n\\n.error-container .error-message {\\n  margin: calc(var(--page-margin) / 2) 0px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  color: var(--ion-color-danger);\\n  font-size: 14px;\\n}\\n\\n.error-container .error-message ion-icon {\\n  -webkit-padding-end: calc(var(--page-margin) / 2);\\n          padding-inline-end: calc(var(--page-margin) / 2);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Ncl9Gcm9zaC9EZXNrdG9wL1NlY3VyZVBhc3Mvc3JjL2FwcC9ib29rLWd1ZXN0L2Jvb2stZ3Vlc3QucGFnZS5zY3NzIiwic3JjL2FwcC9ib29rLWd1ZXN0L2Jvb2stZ3Vlc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksMEJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7RUFDQSw4QkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREdJO0VBQ0ksd0NBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSxlQUFBO0FDQVI7O0FEQ1E7RUFDSSxpREFBQTtVQUFBLGdEQUFBO0FDQ1oiLCJmaWxlIjoic3JjL2FwcC9ib29rLWd1ZXN0L2Jvb2stZ3Vlc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDMge1xuICAgIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufVxuXG4jaW1wb3J0X2NvbnRhY3QtLWJ1dHRvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAyMHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5lcnJvci1jb250YWluZXIge1xuICAgIC5lcnJvci1tZXNzYWdlIHtcbiAgICAgICAgbWFyZ2luOiBjYWxjKHZhcigtLXBhZ2UtbWFyZ2luKSAvIDIpIDBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGlvbi1pY29uIHtcbiAgICAgICAgICAgIHBhZGRpbmctaW5saW5lLWVuZDogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJoMyB7XG4gIGZvbnQtc2l6ZTogMTZweCAhaW1wb3J0YW50O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDVweDtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1tZWRpdW0pO1xufVxuXG4jaW1wb3J0X2NvbnRhY3QtLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDIwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgd2lkdGg6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItbWVzc2FnZSB7XG4gIG1hcmdpbjogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKSAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItbWVzc2FnZSBpb24taWNvbiB7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Contacts, Contact, ContactField, ContactName } from '@ionic-native/contacts/ngx';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Geolocation, GeolocationOptions, Geoposition } from '@ionic-native/geolocation/ngx';\nimport { HoaStoreService } from '../hoa-store.service';\nimport { ToastService } from '../toast.service';\nimport { AlertService } from '../alert.service';\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n// import 'firebase/auth';\n\n@Component({\n  selector: 'app-book-guest',\n  templateUrl: './book-guest.page.html',\n  styleUrls: ['./book-guest.page.scss'],\n  providers: [HoaStoreService, ToastService, AlertService]\n})\nexport class BookGuestPage implements OnInit {\n\n      // fullname = '';\n      // phone = '';\n      // gender = '';\n      // vehicleMake = '';\n      // vehicleRegNum = '';\n      // vehicleColor = '';\n      // comments = '';\n      isConfirmed = false;\n      dependentOn: any = '';\n      profile: any = '';\n      guestCode = 0;\n      isLoading = false;\n      location: any = '';\n      guestForm: FormGroup;\n      validation_messages = {\n            'name': [\n                  { type: 'required', message: 'Guest name is required.' }\n            ],\n            'phone': [\n                  { type: 'required', message: 'Guest phone number is required' }\n            ],\n            'gender': [\n                  { type: 'required', message: 'Please specify a gender' }\n            ],\n            'vehicleMake': [\n                  { type: 'required', message: 'Please specify a vehicle make' }\n            ],\n            'vehicleRegNum': [\n                  { type: 'required', message: 'Vehicle registration number is required' }\n            ],\n            'vehicleColor': [\n                  { type: 'required', message: 'Please specify a color' }\n            ],\n            'comments': [\n                  { type: 'required', message: 'Please include a comment' }\n            ]\n          };\n  constructor(private router: Router,\n              private store: HoaStoreService,\n              private toast: ToastService,\n              private alert: AlertService,\n              private contacts: Contacts,\n              private socialSharing: SocialSharing,\n              private geoLocation: Geolocation) {\n                    this.getLocation();\n        this.getProfile();\n        this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n        //   INIT FORM\n        this.guestForm = new FormGroup({\n            'name': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'phone': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'gender': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'vehicleMake': new FormControl(''),\n            'vehicleRegNum': new FormControl(''),\n            'vehicleColor': new FormControl(''),\n            'comments': new FormControl(''),\n            'isConfirmed': new FormControl(true)\n        });\n   }\n\n  bookGuest() {\n        this.isLoading = true;\n      // ADD GUEST TO USER'S GUESTS ROUTE\n      const uid = this.store.getItem('hoa-uid');\n      const role = this.store.getItem('hoa-role');\n      const date = Date.now();\n      let data;\n      // console\n      let confirmed;\n\n      if (this.isConfirmed) {\n            // confirmed = new Date();\n            data = {\n                  guest: {\n                        fullname: this.guestForm.get('name').value,\n                        phone: this.guestForm.get('phone').value,\n                        gender: this.guestForm.get('gender').value,\n                        vehicleMake: this.guestForm.get('vehicleMake').value || 'N/A',\n                        vehicleRegNum: this.guestForm.get('vehicleRegNum').value || 'N/A',\n                        vehicleColor: this.guestForm.get('vehicleColor').value || 'N/A',\n                        comments: this.guestForm.get('comments').value || 'N/A'\n                  },\n                  confirmed: date,\n                  status: 'Confirmed',\n                  bookedAt: date,\n                  bookedBy: uid,\n                  inAt: 'N/A',\n                  leavingAt: 'N/A',\n                  outAt: 'N/A',\n                  return: false,\n                  detain: false,\n                  guestCode: this.guestCode\n            };\n      } else {\n            data = {\n                  guest: {\n                        fullname: this.guestForm.get('name').value,\n                        phone: this.guestForm.get('phone').value,\n                        gender: this.guestForm.get('gender').value,\n                        vehicleMake: this.guestForm.get('vehicleMake').value || 'N/A',\n                        vehicleRegNum: this.guestForm.get('vehicleRegNum').value || 'N/A',\n                        vehicleColor: this.guestForm.get('vehicleColor').value || 'N/A',\n                        comments: this.guestForm.get('comments').value || 'N/A'\n                  },\n                  status: 'Booked',\n                  confirmed: 'N/A',\n                  bookedAt: date,\n                  bookedBy: uid,\n                  inAt: 'N/A',\n                  leavingAt: 'N/A',\n                  outAt: 'N/A',\n                  return: false,\n                  detain: false,\n                  guestCode: this.guestCode\n            };\n      }\n\n\n\n      firebase.database().ref(`${role}/${uid}`).child('visitors').push(data).then((res) => {\n            console.log('Added to user route successfully');\n            // ADD GUEST TO GENERAL VISITOR'S NODE FOR SECURITY\n            firebase.database().ref('Visitors').child(res.key).set(data).then(() => {\n                  console.log('Added to Visitor\\'s route for security');\n                  // tslint:disable-next-line:max-line-length\n                  const presentAlert = this.alert.presentShareAlert(`Share Booking With ${data.guest.fullname}?`, this.guestForm, this.guestCode, this.profile, this.location);\n                  // console.log(presentAlert.__zone_symbol__state);\n                  // presentAlert.then((presentRes) => {\n                  //       console.log('PRESENT ALERT RES', presentRes);\n                        // this.shareBooking();\n                        this.router.navigate(['app/activity']);\n                        this.toast.showToast('Guest Booked', '2000', 'bottom');\n                        this.isLoading = false;\n                  // }).catch((err: Error) => {\n                        this.router.navigate(['app/user']);\n                        this.toast.showToast('Guest Booked', '2000', 'bottom');\n                        this.isLoading = false;\n                  // });\n                  // if (presentAlert.__zone_symbol__state) {\n                  //       this.shareBooking();\n                  //       this.router.navigate(['app/user']);\n                  //       this.toast.showToast('Guest Booked', '2000', 'bottom');\n                  //       this.isLoading = false;\n                  // } else {\n                  //       this.router.navigate(['app/user']);\n                  //       this.toast.showToast('Guest Booked', '2000', 'bottom');\n                  //       this.isLoading = false;\n                  // }\n            }).catch((err: Error) => {\n                  console.error(err.message);\n                  this.toast.showToast(err.message, '4000', 'bottom');\n                  this.isLoading = false;\n            });\n            // ADD TO RESIDENT'S ESTATE VISITORS ROUTE /Estates/{estateUID}/visitors/{UID}\n            firebase.database().ref(`Estates/${this.profile.estateUID}`).child('visitors').push(res.key).then(() => {\n                  console.log('Visitor UID added to Estate route');\n            }, (err) => {\n                  console.log(err);\n            }).catch((err: Error) => {\n                  console.log(err.message);\n            });\n            // ADD TO DEPENDENT'S SUPER IF ROLE === dependent\n            if (role === 'dependent') {\n                  firebase.database().ref(`resident/${this.dependentOn.uid}/dependents/${uid}`).child('visitors').push(data).then(() => {\n                        console.log('Guest added to dependent under super');\n                        this.toast.showToast('Guest Booked', '2000', 'bottom');\n                        this.isLoading = false;\n                  }).catch((err: Error) => {\n                        console.error(err.message);\n                        this.toast.showToast(err.message, '4000', 'bottom');\n                        this.isLoading = false;\n                  });\n            }\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n            this.isLoading = false;\n      });\n  }\n\n  sendSMS() {\n      //   SEND BOOKING SMS TO VISITORS NUMBER\n      //   USING IONIC-NATIVE\n      const message = `Hey ${this.guestForm.get('name').value}, you\\'re booked. Your serial number is: ${this.guestCode}`;\n      this.socialSharing.shareViaSMS(message, this.guestForm.get('phone').value).then(() => {\n            this.toast.showToast('SMS Sent To Guest', '2000', 'bottom');\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n  }\n\n  importContact() {\n      this.contacts.pickContact().then((pickedContact: Contact) => {\n            // SET FORM TO APPROPRIATE VALUES\n            this.guestForm.get('name').setValue(pickedContact.displayName);\n            this.guestForm.get('phone').setValue(pickedContact.phoneNumbers[0].value);\n            this.toast.showToast('Contact Retrieved', '2000', 'bottom');\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n  }\n\n  bookGroupGuest() {\n        this.router.navigate(['book-group']);\n  }\n\n  getDependentOn() {\n      firebase.database().ref(`resident/${this.profile.dependentOn}`).once('value', (snapshot) => {\n            console.log('Retrieved dependentOn');\n            this.dependentOn = snapshot.val();\n      }).catch((err: Error) => {\n            console.error(err.message);\n      });\n}\n\nshareBooking() {\n      // SHARE BOOKING TO VISITOR\n      // USING IONIC-NATIVE\n      const message = `Dear ${this.guestForm.get('name').value}, your access code into ${this.profile.estateName} is ${this.guestCode}.\n      Kindly present access code on arrival.\n      Host: ${this.profile.fullname}\n      Direction: ${this.location.lng},${this.location.lat}`;\n      this.socialSharing.share(message).then(() => {\n            this.toast.showToast('Booking Shared', '2000', 'bottom');\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n}\n\ngetLocation() {\n      const options: GeolocationOptions = {\n            enableHighAccuracy: true\n      };\n\n      this.geoLocation.getCurrentPosition(options).then((res: Geoposition) => {\n            this.location = {\n                  lat: res.coords.latitude,\n                  lng: res.coords.longitude\n            };\n      }).catch((err: Error) => {\n            console.log(err.message);\n      });\n}\n\ngetProfile() {\n      let role, uid;\n      uid = this.store.getItem('hoa-uid');\n      role = this.store.getItem('hoa-role');\n      firebase.database().ref(role).child(uid).once('value', (snapshot) => {\n            this.profile = snapshot.val();\n            // GET DEPENDENT ON IF ROLE === DEPENDENT\n            if (role === 'dependent') {\n                  this.getDependentOn();\n            }\n      }).then(() => {\n            console.log('Profile retrieved successfully');\n            // this.toast.showToast('Profile retrieved', '2000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n  }\n  ngOnInit() {\n      //   CHECK IF GUESTCODE ALREADY EXISTS\n      firebase.database().ref('Visitors').once('value', (snap) => {\n            if (snap.val()) {\n                  for (const key in snap.val()) {\n                        if (snap.val().hasOwnProperty(key)) {\n                              const visitor = snap.val()[key];\n                              if (visitor.status === 'In' && visitor.guestCode === this.guestCode) {\n                                    console.log('Code exists', this.guestCode);\n                                    this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                              } else {\n                                    console.log('Code available', this.guestCode);\n                                    this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                              }\n                        }\n                  }\n            } else {\n                  console.log('No snap');\n                  this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                  console.log('Guest Code', this.guestCode);\n            }\n      });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"book-guest-book-guest-module-es5.js"}