{"version":3,"sources":["src/app/book-group/book-group.page.html","src/app/book-group/book-group.module.ts","src/app/book-group/book-group.page.scss","src/app/book-group/book-group.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header no-border>\\n    <ion-toolbar color='primary'>\\n        <ion-buttons slot=\\\"start\\\">\\n            <!-- <ion-menu-button></ion-menu-button> -->\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Book Group Guests</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"book-guest-content\\\">\\n    <ion-list lines='full'>\\n        <ion-item>\\n            <ion-label stacked>Name</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='fullname'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label stacked>Phone Number</ion-label>\\n            <ion-input type=\\\"tel\\\" [(ngModel)]='phone'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label stacked>Reason For Visit</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='reason'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>Gender</ion-label>\\n            <ion-select placeholder=\\\"Select One\\\" [(ngModel)]='gender'>\\n                <ion-select-option value=\\\"f\\\">Female</ion-select-option>\\n                <ion-select-option value=\\\"m\\\">Male</ion-select-option>\\n                <ion-select-option value=\\\"other\\\">Other</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <!-- <ion-item>\\n            <ion-label stacked>Vehicle Make</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleMake'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label stacked>Vehicle Reg Number</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleRegNum'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label stacked>Vehicle Color</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='vehicleColor'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label stacked>Comments</ion-label>\\n            <ion-input type=\\\"text\\\" [(ngModel)]='comments'></ion-input>\\n        </ion-item> -->\\n        <ion-item>\\n            <ion-label>Guest Confirmation</ion-label>\\n            <ion-toggle [(ngModel)]=\\\"isConfirmed\\\"></ion-toggle>\\n        </ion-item>\\n    </ion-list>\\n    <ion-text color='secondary' style=\\\"padding: 15px\\\">Guests: {{guests.length}}</ion-text>\\n    <br>\\n    <ion-list lines='full'>\\n        <p style=\\\"margin-left: 15px;\\\" *ngFor='let guest of guests; let i = index'>{{i + 1}}. {{guest.fullname}}</p>\\n    </ion-list>\\n    <ion-button expand='block' fill='solid' (click)='addGuest()' [disabled]='fullname == \\\"\\\" || fullname === undefined'>\\n        <ion-spinner *ngIf='addingGuest'></ion-spinner>\\n        <ion-text *ngIf='addingGuest'>Adding Guest...</ion-text>\\n        <ion-text *ngIf='!addingGuest'>Add Guest</ion-text>\\n    </ion-button>\\n    <ion-button expand='block' fill='solid' (click)='bookGroupGuests()' *ngIf='guests.length > 1' [disabled]='isLoading || guests.length < 1'>\\n        <ion-spinner *ngIf='isLoading'></ion-spinner>\\n        <ion-text *ngIf='isLoading'>Booking Guests...</ion-text>\\n        <ion-text *ngIf='!isLoading'>Book Guests</ion-text>\\n    </ion-button>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookGroupPage } from './book-group.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookGroupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BookGroupPage]\n})\nexport class BookGroupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2stZ3JvdXAvYm9vay1ncm91cC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\nimport { Geolocation, GeolocationOptions, Geoposition } from '@ionic-native/geolocation/ngx';\nimport { HoaStoreService } from '../hoa-store.service';\nimport { ToastService } from '../toast.service';\nimport { AlertService } from '../alert.service';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\n@Component({\n  selector: 'app-book-group',\n  templateUrl: './book-group.page.html',\n  styleUrls: ['./book-group.page.scss'],\n  providers: [HoaStoreService, ToastService, AlertService]\n})\nexport class BookGroupPage implements OnInit {\n\n      guests: any[] = [];\n      profile: any;\n      dependentOn: any;\n      fullname;\n      phone;\n      gender;\n      reason;\n      vehicleMake;\n      vehicleRegNum;\n      vehicleColor;\n      comments;\n      addingGuest = false;\n      isLoading = false;\n      isConfirmed = false;\n      guestCode = 0;\n      location: any = '';\n      guestForm: FormGroup;\n\n      validation_messages = {\n            'name': [\n                  { type: 'required', message: 'Guest name is required.' }\n            ],\n            'phone': [\n                  { type: 'required', message: 'Guest phone number is required' }\n            ],\n            'gender': [\n                  { type: 'required', message: 'Please specify a gender' }\n            ],\n            'reason': [\n                  { type: 'required', message: 'Please specify a gender' }\n            ]\n          };\n  constructor(private store: HoaStoreService,\n              private toast: ToastService,\n              private alert: AlertService,\n              private router: Router,\n              private socialSharing: SocialSharing,\n              private geoLocation: Geolocation) {\n                    this.getProfile();\n                    this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n        //   INIT FORM\n        this.guestForm = new FormGroup({\n            'name': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'phone': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'gender': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'reason': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            // 'vehicleMake': new FormControl('', Validators.compose([\n            //       Validators.required\n            // ])),\n            // 'vehicleRegNum': new FormControl('', Validators.compose([\n            //       Validators.required\n            // ])),\n            // 'vehicleColor': new FormControl('', Validators.compose([\n            //       Validators.required\n            // ])),\n            // 'comments': new FormControl('', Validators.compose([\n            //       Validators.required\n            // ])),\n            // 'isConfirmed': new FormControl(true)\n        });\n               }\n\n  addGuest() {\n      this.addingGuest = true;\n      const guest = {\n            fullname: this.fullname,\n            phone: this.phone,\n            gender: this.gender,\n            // vehicleMake: this.vehicleMake,\n            // vehicleRegNum: this.vehicleRegNum,\n            // vehicleColor: this.vehicleColor,\n            // comments: this.comments\n      };\n      this.guests.push(guest);\n      this.resetInputs();\n      this.addingGuest = false;\n  }\n\n  resetInputs() {\n      this.fullname = '';\n      this.phone = '';\n      this.gender = '';\n      // this.vehicleMake = '';\n      // this.vehicleRegNum = '';\n      // this.vehicleColor = '';\n      // this.comments = '';\n  }\n\n  bookGroupGuests() {\n      // BOOK ALL GUESTS\n      // ASK HOW TO DISPLAY GROUP GUESTS\n      this.isLoading = true;\n      // ADD GUEST TO USER'S GUESTS ROUTE\n      const uid = this.store.getItem('hoa-uid');\n      const role = this.store.getItem('hoa-role');\n      const date = Date.now();\n      let data;\n      // console\n      let confirmed;\n\n      if (this.isConfirmed) {\n            // confirmed = new Date();\n            data = {\n                  // fullname: this.guestForm.get('name').value,\n                  // phone: this.guestForm.get('phone').value,\n                  // gender: this.guestForm.get('gender').value,\n                  // vehicleMake: this.guestForm.get('vehicleMake').value,\n                  // vehicleRegNum: this.guestForm.get('vehicleRegNum').value,\n                  // vehicleColor: this.guestForm.get('vehicleColor').value,\n                  // comments: this.guestForm.get('comments').value,\n                  guest: this.guests,\n                  confirmed: date,\n                  status: 'Confirmed',\n                  bookedAt: date,\n                  bookedBy: uid,\n                  inAt: 'N/A',\n                  leavingAt: 'N/A',\n                  outAt: 'N/A',\n                  return: false,\n                  detain: false,\n                  reason: this.reason,\n                  guestCode: this.guestCode\n            };\n      } else {\n            data = {\n                  // fullname: this.guestForm.get('name').value,\n                  // phone: this.guestForm.get('phone').value,\n                  // gender: this.guestForm.get('gender').value,\n                  // vehicleMake: this.guestForm.get('vehicleMake').value,\n                  // vehicleRegNum: this.guestForm.get('vehicleRegNum').value,\n                  // vehicleColor: this.guestForm.get('vehicleColor').value,\n                  // comments: this.guestForm.get('comments').value,\n                  guest: this.guests,\n                  confirmed: 'N/A',\n                  status: 'Booked',\n                  bookedAt: date,\n                  bookedby: uid,\n                  inAt: 'N/A',\n                  leavingAt: 'N/A',\n                  outAt: 'N/A',\n                  return: false,\n                  detain: false,\n                  reason: this.reason,\n                  guestCode: this.guestCode\n            };\n      }\n\n\n\n      firebase.database().ref(`${role}/${uid}`).child('visitors').push(data).then((res) => {\n            console.log('Added to user route successfully');\n            // ADD GUEST TO GENERAL VISITOR'S NODE FOR SECURITY\n            firebase.database().ref('Visitors').child(res.key).set(data).then(() => {\n                  // tslint:disable-next-line:max-line-length\n                  const presentAlert = this.alert.presentGroupShareAlert(`Share Booking With Guests?`, this.guests, this.guestCode, this.profile, this.location);\n                  console.log('Added to Visitor\\'s route for security');\n                  this.router.navigate(['app/activity']);\n                  this.toast.showToast('Guests Booked', '2000', 'bottom');\n                  this.isLoading = false;\n            }).catch((err: Error) => {\n                  console.error(err.message);\n                  this.toast.showToast(err.message, '4000', 'bottom');\n                  this.isLoading = false;\n            });\n            // ADD TO RESIDENT'S ESTATE VISITORS ROUTE /Estates/{estateUID}/visitors/{UID}\n            firebase.database().ref(`Estates/${this.profile.estateUID}`).child('visitors').push(res.key).then(() => {\n                  console.log('Visitor UID added to Estate route');\n            }, (err) => {\n                  console.log(err);\n            }).catch((err: Error) => {\n                  console.log(err.message);\n            });\n            // ADD TO DEPENDENT'S SUPER IF ROLE === dependent\n            if (role === 'dependent') {\n                  firebase.database().ref(`resident/${this.dependentOn.uid}/dependents/${uid}`).child('visitors').push(data).then(() => {\n                        console.log('Guest added to dependent under super');\n                        this.toast.showToast('Guests Booked', '2000', 'bottom');\n                        this.isLoading = false;\n                  }).catch((err: Error) => {\n                        console.error(err.message);\n                        this.toast.showToast(err.message, '4000', 'bottom');\n                        this.isLoading = false;\n                  });\n            }\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n            this.isLoading = false;\n      });\n  }\n\n  getDependentOn() {\n      firebase.database().ref(`resident/${this.profile.dependentOn}`).once('value', (snapshot) => {\n            console.log('Retrieved dependentOn');\n            this.dependentOn = snapshot.val();\n      }).catch((err: Error) => {\n            console.error(err.message);\n      });\n}\n\ngetLocation() {\n      const options: GeolocationOptions = {\n            enableHighAccuracy: true\n      };\n\n      this.geoLocation.getCurrentPosition(options).then((res: Geoposition) => {\n            this.location = {\n                  lat: res.coords.latitude,\n                  lng: res.coords.longitude\n            };\n      }).catch((err: Error) => {\n            console.log(err.message);\n      });\n}\n\ngetProfile() {\n      let role, uid;\n      uid = this.store.getItem('hoa-uid');\n      role = this.store.getItem('hoa-role');\n      firebase.database().ref(role).child(uid).once('value', (snapshot) => {\n            this.profile = snapshot.val();\n            // GET DEPENDENT ON IF ROLE === DEPENDENT\n            if (role === 'dependent') {\n                  this.getDependentOn();\n            }\n      }).then(() => {\n            console.log('Profile retrieved successfully');\n            // this.toast.showToast('Profile retrieved', '2000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n  }\n\n  shareBooking() {\n      // SHARE BOOKING TO VISITOR\n      // USING IONIC-NATIVE\n      const message = `Dear ${this.guestForm.get('name').value}, your access code into ${this.profile.estateName} is ${this.guestCode}.\n      Kindly present access code on arrival.\n      Host: ${this.profile.fullname}\n      Direction: ${this.location.lng},${this.location.lat}`;\n      this.socialSharing.share(message).then(() => {\n            this.toast.showToast('Booking Shared', '2000', 'bottom');\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n}\n\n  ngOnInit() {\n        //   CHECK IF GUESTCODE ALREADY EXISTS\n      firebase.database().ref('Visitors').once('value', (snap) => {\n            if (snap.val()) {\n                  for (const key in snap.val()) {\n                        if (snap.val().hasOwnProperty(key)) {\n                              const visitor = snap.val()[key];\n                              if (visitor.status === 'In' && visitor.guestCode === this.guestCode) {\n                                    console.log('Code exists', this.guestCode);\n                                    this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                              } else {\n                                    console.log('Code available', this.guestCode);\n                                    this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                              }\n                        }\n                  }\n            } else {\n                  console.log('No snap');\n                  this.guestCode = Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n                  console.log('Guest Code', this.guestCode);\n            }\n      });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"book-group-book-group-module-es5.js"}