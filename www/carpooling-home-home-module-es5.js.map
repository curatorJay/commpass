{"version":3,"sources":["src/app/carpooling/home/home.page.html","src/app/carpooling/home/home.module.ts","src/app/carpooling/home/home.page.scss","src/app/carpooling/home/home.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,k3bAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,SAAS,EAAE,uCAAA,CAAA,UAAA;AAFb,KADqB,CAAvB;;AAmBA,QAAa,cAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAZ1B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,2CAAA,CAAA,qBAAA,CAHO,EAIP,2CAAA,CAAA,aAAA,CAJO,EAKP,2DAAA,CAAA,mBAAA,CALO,EAMP,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CANO,CADD;AASR,MAAA,YAAY,EAAE,CAAC,uCAAA,CAAA,UAAA,CAAD,CATN;AAUR,MAAA,OAAO,EAAE,CAAC,0CAAA,CAAA,wBAAA,CAAD;AAVD,KAAT,CAY0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;AC7Bb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w/QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBf,QAAa,QAAb;AAAA;AAAA;AAkDE,wBAAoB,KAApB,EACoB,KADpB,EAEoB,MAFpB,EAEkC;AAAA;;AAAA;;AAFd,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAzChB,aAAA,OAAA,GAAU,UAAV;AACA,aAAA,mBAAA,GAAsB,YAAtB;AACA,aAAA,kBAAA,GAAqB,WAArB;AAGA,aAAA,SAAA,GAAY,KAAZ;AAKA,aAAA,aAAA,GAAgB,EAAhB;AAGA,aAAA,mBAAA,GAAsB;AAChB,uBAAa,CACP;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADO,CADG;AAIhB,qBAAW,CACL;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADK,CAJK;AAOhB,uBAAa,CACP;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADO,CAPG;AAUhB,uBAAa,CACP;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADO,CAVG;AAahB,wBAAc,CACR;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADQ,CAbE;AAgBhB,sBAAY,CACN;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADM,CAhBI;AAmBhB,oBAAU,CACJ;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADI,CAnBM;AAsBhB,uBAAa,CACP;AAAE,YAAA,IAAI,EAAE,UAAR;AAAoB,YAAA,OAAO,EAAE;AAA7B,WADO;AAtBG,SAAtB;AA6BY,aAAK,IAAL,GAAY,KAAK,KAAL,CAAW,OAAX,CAAmB,UAAnB,CAAZ;AACA,aAAK,GAAL,GAAW,KAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,CAAX;AACV,aAAK,gBAAL,GAAwB,IAAxB,CAA6B,YAAK;AAE9B,cAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAI,CAAC,MAAL,CAAY,aAAhD,CAAf;AACU,UAAA,MAAM,CAAC,WAAP,CAAmB,eAAnB,EAAoC,YAAK;AACnC;AACA;AACA,YAAA,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,QAAhC,CAAyC,MAAM,CAAC,QAAP,GAAkB,IAA3D;;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,KAA5C;AACL,WALD;AAMA,cAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAI,CAAC,QAAL,CAAc,aAAlD,CAAjB;AACA,UAAA,QAAQ,CAAC,WAAT,CAAqB,eAArB,EAAsC,YAAK;AACrC;AACA;AACA,YAAA,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,QAAlC,CAA2C,QAAQ,CAAC,QAAT,GAAoB,IAA/D;;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,KAA9C;AACL,WALD;AAOb,SAjBD;AAkBA,aAAK,iBAAL,GArB4B,CAsB9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACE,aAAK,UAAL;AACJ;;AA7FJ;AAAA;AAAA,uCA+FkB,CA/FlB,EA+FwB;AAAA;;AACf,UAAA,OAAO,CAAC,GAAR,CAAY,CAAZ,EADe,CAElB;AACA;;AACA,cAAI,CAAC,CAAC,MAAF,CAAS,KAAT,KAAmB,UAAvB,EAAmC;AAC7B;AACA,iBAAK,gBAAL,GAAwB,IAAxB,CAA6B,YAAK;AAC5B,kBAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,MAAI,CAAC,MAAL,CAAY,aAAhD,CAAf;AACA,cAAA,MAAM,CAAC,WAAP,CAAmB,eAAnB,EAAoC,YAAK;AACnC;AACA;AACA,gBAAA,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,QAAhC,CAAyC,MAAM,CAAC,QAAP,GAAkB,IAA3D;;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,KAA5C;AACL,eALD;AAMA,kBAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,MAAI,CAAC,QAAL,CAAc,aAAlD,CAAjB;AACA,cAAA,QAAQ,CAAC,WAAT,CAAqB,eAArB,EAAsC,YAAK;AACrC;AACA;AACA,gBAAA,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,QAAlC,CAA2C,QAAQ,CAAC,QAAT,GAAoB,IAA/D;;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,KAA9C;AACL,eALD;AAML,aAfD;AAgBL,WAlBD,MAmBA,IAAI,CAAC,CAAC,MAAF,CAAS,KAAT,KAAmB,WAAvB,EAAoC;AAC9B,YAAA,OAAO,CAAC,GAAR,CAAY,0BAAZ;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAjB,EAA4B,KAAK,OAAjC,EAF8B,CAG9B;AACA;;AACM,gBAAM,OAAO,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAK,OAAL,CAAa,aAAjD,CAAhB;AACA,YAAA,OAAO,CAAC,WAAR,CAAoB,eAApB,EAAqC,YAAK;AACpC;AACA;AACA,cAAA,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAAuB,SAAvB,EAAkC,QAAlC,CAA2C,OAAO,CAAC,QAAR,GAAmB,IAA9D;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAAuB,SAAvB,EAAkC,KAA9C;AACL,aALD;AAMA,gBAAM,SAAS,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAK,SAAL,CAAe,aAAnD,CAAlB;AACA,YAAA,SAAS,CAAC,WAAV,CAAsB,eAAtB,EAAuC,YAAK;AACtC;AACA;AACA,cAAA,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,QAApC,CAA6C,SAAS,CAAC,QAAV,GAAqB,IAAlE;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,MAAI,CAAC,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAAhD;AACL,aALD,EAbwB,CAmB9B;AACL,WApBD,MAoBO;AACD;AACA;AACL;AACH;AA9IJ;AAAA;AAAA,wCAgJmB,CAhJnB,EAgJ4B;AACtB;AACA,cAAM,IAAI,GAAG,KAAK,qBAAL,CAA2B,CAA3B,CAAb;AAEA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,cAAD,EAAiB,IAAI,CAAC,SAAL,CAAe,IAAf,CAAjB,CAArB;AACF;AArJJ;AAAA;AAAA,+CAuJ0B,CAvJ1B,EAuJmC;AAC7B;AACA,cAAM,IAAI,GAAG,KAAK,WAAL,CAAiB,CAAjB,CAAb;AAEA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,cAAD,EAAiB,IAAI,CAAC,SAAL,CAAe,IAAf,CAAjB,CAArB;AACF;AA5JJ;AAAA;AAAA,yCA8JiB;AAAA;;AACX;AACA,UAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,WAA2B,KAAK,IAAhC,cAAwC,KAAK,GAA7C,GAAoD,KAApD,CAA0D,eAA1D,EAA2E,IAA3E,CAAgF,OAAhF,EAAyF,UAAC,KAAD,EAAU;AAC7F,YAAA,MAAI,CAAC,WAAL,GAAmB,EAAnB;;AACA,iBAAK,IAAM,GAAX,IAAkB,KAAK,CAAC,GAAN,EAAlB,EAA+B;AACzB,kBAAI,KAAK,CAAC,GAAN,GAAY,cAAZ,CAA2B,GAA3B,CAAJ,EAAqC;AAC/B,oBAAM,OAAO,GAAG,KAAK,CAAC,GAAN,GAAY,GAAZ,CAAhB;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAF+B,CAG/B;;AACA,gBAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,CAAwB,kBAAxB,EAA4C,KAA5C,CAAkD,OAAlD,EAA2D,IAA3D,CAAgE,OAAhE,EAAyE,UAAC,IAAD,EAAS;AAC5E,kBAAA,MAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,IAAI,CAAC,GAAL,EAAtB;;AACA,kBAAA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,EAAZ;;AACA,kBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,wBAArB,EAA+C,MAA/C,EAAuD,QAAvD;AACL,iBAJD,EAIG,UAAC,GAAD,EAAe;AACZ,kBAAA,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,OAAjB;;AACA,kBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,iBAPD,EAOG,KAPH,CAOS,UAAC,GAAD,EAAe;AAClB,kBAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;;AACA,kBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,iBAVD;AAWL;AACN;AACN,WApBD,EAoBG,UAAC,GAAD,EAAe;AACZ,YAAA,OAAO,CAAC,IAAR,CAAa,GAAG,CAAC,OAAjB;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,WAvBD,EAuBG,KAvBH,CAuBS,UAAC,GAAD,EAAe;AAClB,YAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,WA1BD;AA2BF;AA3LJ;AAAA;AAAA,mCA6LW;AAAA;;AACF,eAAK,SAAL,GAAiB,IAAjB;AACA,eAAK,kBAAL,GAA0B,cAA1B;AACA,cAAM,YAAY,GAAG;AACf,YAAA,IAAI,EAAE,KAAK,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,KADzB;AAEf,YAAA,EAAE,EAAE,KAAK,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,KAFrB;AAGf,YAAA,KAAK,EAAE,KAAK,YAAL,CAAkB,GAAlB,CAAsB,WAAtB,EAAmC;AAH3B,WAArB,CAHE,CASL;;AACA,UAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,mBAAmC,KAAK,SAAxC,GAAqD,KAArD,CAA2D,kBAA3D,EAA+E,IAA/E,CAAoF,OAApF,EAA6F,UAAC,WAAD,EAAgB;AACvG,gBAAM,eAAe,GAAG,WAAW,CAAC,GAAZ,EAAxB;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,eAAZ;AACA,YAAA,MAAI,CAAC,qBAAL,GAA6B,EAA7B;;AAEA,iBAAK,IAAM,GAAX,IAAkB,WAAW,CAAC,GAAZ,EAAlB,EAAqC;AAC/B,kBAAI,WAAW,CAAC,GAAZ,GAAkB,cAAlB,CAAiC,GAAjC,CAAJ,EAA2C;AACrC,oBAAM,aAAa,GAAG,WAAW,CAAC,GAAZ,GAAkB,GAAlB,CAAtB;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAFqC,CAGrC;;AACA,gBAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,CAAwB,kBAAxB,EAA4C,KAA5C,CAAkD,aAAlD,EAAiE,IAAjE,CAAsE,OAAtE,EAA+E,UAAC,WAAD,EAAgB;AACzF,sBAAM,IAAI,GAAG,WAAW,CAAC,GAAZ,EAAb;AACA,kBAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAFyF,CAIzF;;AACA,sBAAI,IAAI,CAAC,IAAL,KAAc,YAAY,CAAC,IAA3B,IACA,IAAI,CAAC,EAAL,KAAY,YAAY,CAAC,EADzB,IAEA,IAAI,CAAC,KAAL,KAAe,YAAY,CAAC,KAFhC,EAEuC;AACjC,oBAAA,MAAI,CAAC,qBAAL,CAA2B,IAA3B,CAAgC,IAAhC;AACL;AACN,iBAVD,EAUG,UAAC,GAAD,EAAQ;AACL,kBAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACL,iBAZD,EAYG,KAZH,CAYS,UAAC,GAAD,EAAe;AAClB,kBAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACL,iBAdD;AAeL;AACN;;AACD,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;;AACA,YAAA,MAAI,CAAC,OAAL,CAAa,aAAb,CAA2B,CAA3B,EAA8B,GAA9B,EAAmC,IAAnC;;AACA,YAAA,MAAI,CAAC,kBAAL,GAA0B,WAA1B;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,kBAArB,EAAyC,MAAzC,EAAiD,QAAjD;AACL,WA/BD,EA+BG,UAAC,GAAD,EAAQ;AACL,YAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,YAAA,MAAI,CAAC,kBAAL,GAA0B,WAA1B;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,WApCD,EAoCG,KApCH,CAoCS,UAAC,GAAD,EAAe;AAClB,YAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,YAAA,MAAI,CAAC,kBAAL,GAA0B,WAA1B;;AACA,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;AACL,WAzCD;AA0CF;AAjPJ;AAAA;AAAA,oCAmPY;AAAA;;AACH,eAAK,SAAL,GAAiB,IAAjB;AACA,eAAK,mBAAL,GAA2B,eAA3B;AACA,cAAM,QAAQ,GAAG;AACX,YAAA,IAAI,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAD/B;AAEX,YAAA,EAAE,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAuB,SAAvB,EAAkC,KAF3B;AAGX,YAAA,IAAI,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAH/B;AAIX,YAAA,IAAI,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAJ/B;AAKX,YAAA,KAAK,EAAE,KAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,EAAqC,KALjC;AAMX,YAAA,SAAS,EAAE,KAAK;AANL,WAAjB,CAHG,CAWA;AACA;;AACA,UAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,eAAsC,KAAtC,CAA4C,OAA5C,EAAqD,IAArD,CAA0D,QAA1D,EAAoE,IAApE,CAAyE,UAAC,MAAD,EAAW;AAC9E,YAAA,OAAO,CAAC,GAAR,CAAY,4BAAZ,EAA0C,MAAM,CAAC,GAAjD,EAD8E,CAG9E;;AACA,YAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,mBAAmC,MAAI,CAAC,SAAxC,GAAqD,KAArD,CAA2D,kBAA3D,EAA+E,IAA/E,CAAoF,MAAM,CAAC,GAA3F,EAAgG,IAAhG,CAAqG,YAAK;AACpG;AACA,cAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,WAA2B,MAAI,CAAC,IAAhC,cAAwC,MAAI,CAAC,GAA7C,GAAoD,KAApD,CAA0D,eAA1D,EAA2E,IAA3E,CAAgF,MAAM,CAAC,GAAvF,EAA4F,IAA5F,CAAiG,YAAK;AAChG,gBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,cAArB,EAAqC,MAArC,EAA6C,QAA7C;;AACA,gBAAA,OAAO,CAAC,GAAR,CAAY,cAAZ;;AACA,gBAAA,MAAI,CAAC,kBAAL;;AACA,gBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,gBAAA,MAAI,CAAC,mBAAL,GAA2B,YAA3B;AACL,eAND,EAMG,UAAC,GAAD,EAAQ;AACL,gBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAArB,EAA0B,MAA1B,EAAkC,QAAlC;;AACA,gBAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,gBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,gBAAA,MAAI,CAAC,mBAAL,GAA2B,YAA3B;AACL,eAXD,EAWG,KAXH,CAWS,UAAC,GAAD,EAAe;AAClB,gBAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;;AACA,gBAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACA,gBAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,gBAAA,MAAI,CAAC,mBAAL,GAA2B,YAA3B;AACL,eAhBD;AAiBX,aAnBK,EAmBH,UAAC,GAAD,EAAQ;AACL,cAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACL,aArBK,EAqBH,KArBG,CAqBG,UAAC,GAAD,EAAe;AAClB,cAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACL,aAvBK;AAwBX,WA5BK,EA4BH,UAAC,GAAD,EAAQ;AACL,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAArB,EAA0B,MAA1B,EAAkC,QAAlC;;AACA,YAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,YAAA,MAAI,CAAC,mBAAL,GAA2B,YAA3B;AACL,WAjCK,EAiCH,KAjCG,CAiCG,UAAC,GAAD,EAAe;AAClB,YAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAAG,CAAC,OAAzB,EAAkC,MAAlC,EAA0C,QAA1C;;AACA,YAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACA,YAAA,MAAI,CAAC,SAAL,GAAiB,KAAjB;AACA,YAAA,MAAI,CAAC,mBAAL,GAA2B,YAA3B;AACL,WAtCK;AAuCR;AAvSJ;AAAA;AAAA,qCAySa;AAAA;;AACJ,cAAM,IAAI,GAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,UAAnB,CAAb;AACA,cAAM,GAAG,GAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,SAAnB,CAAZ;AAEA,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACpC,YAAA,yCAAA,CAAA,UAAA,CAAA,GAAoB,GAApB,WAA2B,IAA3B,cAAmC,GAAnC,GAA0C,IAA1C,CAA+C,OAA/C,EAAwD,UAAC,OAAD,EAAY;AAC9D,cAAA,MAAI,CAAC,SAAL,GAAiB,OAAO,CAAC,GAAR,GAAc,SAA/B;AACA,cAAA,MAAI,CAAC,OAAL,GAAe,OAAO,CAAC,GAAR,EAAf;AACA,cAAA,OAAO,CAAC,IAAD,CAAP;AACL,aAJD,EAIG,UAAC,GAAD,EAAQ;AACR;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACA,cAAA,MAAM,CAAC,KAAD,CAAN;AACF,aARD,EAQG,KARH,CAQS,UAAC,GAAD,EAAe;AACrB;AACA,cAAA,OAAO,CAAC,KAAR,CAAc,GAAG,CAAC,OAAlB;AACA,cAAA,MAAM,CAAC,KAAD,CAAN;AACF,aAZD;AAaF,WAdM,EAcJ,IAdI,CAcC,UAAC,GAAD,EAAQ;AACb,gBAAI,GAAJ,EAAS;AACH,cAAA,MAAI,CAAC,cAAL;AACL;AACH,WAlBM,EAkBJ,KAlBI,CAkBE,UAAC,GAAD,EAAQ;AACd,YAAA,OAAO,CAAC,KAAR,CAAc,GAAd;AACF,WApBM,CAAP;AAqBL;AAlUJ;AAAA;AAAA,2CAoUkB;AAAA;;AACZ;AACA,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACjC;AACA,YAAA,MAAI,CAAC,YAAL,GAAoB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC5B,0BAAY,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC7C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADkC,CAAnB,CAApB,CADgB;AAI5B,wBAAU,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC3C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADgC,CAAnB,CAApB,CAJkB;AAO5B,2BAAa,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC7C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADkC,CAAnB,CAAnB;AAPe,aAAd,CAApB;AAWA,YAAA,OAAO,CAAC,IAAD,CAAP;AACL,WAdM,CAAP;AAeH;AArVH;AAAA;AAAA,4CAuVmB;AAAA;;AACX,iBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,YAAA,MAAI,CAAC,aAAL,GAAqB,IAAI,2CAAA,CAAA,WAAA,CAAJ,CAAc;AAC7B,2BAAa,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC9C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADmC,CAAnB,CAApB,CADgB;AAI7B,yBAAW,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC5C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADiC,CAAnB,CAApB,CAJkB;AAO7B,2BAAa,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC9C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADmC,CAAnB,CAApB,CAPgB;AAU7B,2BAAa,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,EAAhB,EAAoB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC9C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADmC,CAAnB,CAApB,CAVgB;AAa7B,4BAAc,IAAI,2CAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAC9C,2CAAA,CAAA,YAAA,CAAA,CAAW,QADmC,CAAnB,CAAnB;AAbe,aAAd,CAArB;AAiBE,YAAA,OAAO,CAAC,IAAD,CAAP;AACL,WAnBM,CAAP;AAoBL;AA5WH;AAAA;AAAA,6CA8WoB;AACZ,eAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAApC;AACA,eAAK,aAAL,CAAmB,GAAnB,CAAuB,SAAvB,EAAkC,KAAlC;AACA,eAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAApC;AACA,eAAK,aAAL,CAAmB,GAAnB,CAAuB,WAAvB,EAAoC,KAApC;AACA,eAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB,EAAqC,KAArC;AACL;AApXH;AAAA;AAAA,mCAsXU,CAEP;AAxXH;AAAA;AAAA,0CA0XiB;AAAA;;AACX;AACA,cAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAK,MAAL,CAAY,aAAhD,CAAf;AACA,UAAA,MAAM,CAAC,WAAP,CAAmB,eAAnB,EAAoC,YAAK;AACnC,gBAAM,IAAI,GAAG,MAAM,CAAC,QAAP,GAAkB,IAA/B;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,QAAP,EAAZ,EAFmC,CAGnC;;AACA,YAAA,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,QAAtB,EAAgC,QAAhC,CAAyC,IAAzC;AACL,WALD;AAMA,cAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,YAAvB,CAAoC,KAAK,QAAL,CAAc,aAAlD,CAAjB;AACA,UAAA,QAAQ,CAAC,WAAT,CAAqB,eAArB,EAAsC,YAAK;AACrC,gBAAM,IAAI,GAAG,QAAQ,CAAC,QAAT,GAAoB,IAAjC;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,QAAQ,CAAC,QAAT,EAAZ,EAFqC,CAGrC;;AACA,YAAA,MAAI,CAAC,YAAL,CAAkB,GAAlB,CAAsB,UAAtB,EAAkC,QAAlC,CAA2C,IAA3C;AACL,WALD;AAML;AA1YD;AAAA;AAAA,2CA4YgB,CACV;AACL;AA9YD;;AAAA;AAAA,OAAA;;;;cAkD6B,+CAAA,CAAA,iBAAA;;cACA,2CAAA,CAAA,cAAA;;cACC,4CAAA,CAAA,QAAA;;;;AAlDiB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,WAAV,EAAuB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAvB,CAAwC,E,gEAAW,2DAAA,CAAA,sBAAA,C,CAAX,CAAA,E,kBAAA,E,WAAA,E,KAAgC,CAAhC;AACF,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAtC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,SAAV,EAAqB;AAAC,MAAA,MAAM,EAAE;AAAT,KAArB,CAAsC,E,gEAAS,2CAAA,CAAA,YAAA,C,CAAT,CAAA,E,kBAAA,E,SAAA,E,KAAoB,CAApB;AACD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,QAAV,EAAoB;AAAC,MAAA,MAAM,EAAE;AAAT,KAApB,CAAqC,E,gEAAQ,0CAAA,CAAA,YAAA,C,CAAR,CAAA,E,kBAAA,E,QAAA,E,KAAmB,CAAnB;AACE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAvC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,UAAV,EAAsB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAtB,CAAuC,E,gEAAU,0CAAA,CAAA,YAAA,C,CAAV,CAAA,E,kBAAA,E,UAAA,E,KAAqB,CAArB;AACD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAtC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,SAAV,EAAqB;AAAC,MAAA,MAAM,EAAE;AAAT,KAArB,CAAsC,E,gEAAS,0CAAA,CAAA,YAAA,C,CAAT,CAAA,E,kBAAA,E,SAAA,E,KAAoB,CAApB;AACE,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,WAAV,EAAuB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAvB,CAAwC,E,gEAAW,0CAAA,CAAA,YAAA,C,CAAX,CAAA,E,kBAAA,E,WAAA,E,KAAsB,CAAtB;AACC,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAzC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,YAAV,EAAwB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAxB,CAAyC,E,gEAAY,2CAAA,CAAA,YAAA,C,CAAZ,CAAA,E,kBAAA,E,YAAA,E,KAAuB,CAAvB;AARnC,IAAA,QAAQ,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATpB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sFAAA,CAAA,EAAA,OAFS;AAIT,MAAA,SAAS,EAAE,CACL,+CAAA,CAAA,iBAAA,CADK,EAEL,2CAAA,CAAA,cAAA,CAFK,CAJF;;;;AAAA,KAAV,CASoB,E,uEAkDQ,+CAAA,CAAA,iBAAA,C,EACA,2CAAA,CAAA,cAAA,C,EACC,4CAAA,CAAA,QAAA,C,EApDT,CAAA,EAAR,QAAQ,CAAR","sourcesContent":["export default \"<ion-header no-border>\\n    <ion-toolbar color='primary'>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>\\n            Carpooling\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"carpooling-content\\\" #content>\\n    <ion-img src='https://sciexaminer.com/wp-content/uploads/2019/10/Carpooling-990x660.jpg' height='150px'></ion-img>\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)='segmentChanged($event)'>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"findRide\\\" color='secondary'>\\n            <ion-label color='secondary'>Find A Ride</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"offerRide\\\">\\n            <ion-label color='secondary'>Offer Ride</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"rideHistory\\\">\\n            <ion-label color='secondary'>History</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n    <div [ngSwitch]='segment'>\\n        <div id=\\\"findRide\\\" [hidden]=\\\"this.segment !== 'findRide'\\\">\\n            <form [formGroup]=\\\"findRideForm\\\" (ngSubmit)=\\\"findRide()\\\">\\n                <ion-list lines='full'>\\n                    <!-- FROM LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>From</ion-label>\\n                        <input ngx-google-places-autocomplete #findFrom type=\\\"text\\\" id='findFrom' inputmode=\\\"text\\\" autocomplete='on' formControlName='findFrom'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findFrom\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findFrom').hasError(validation.type) && (findRideForm.get('findFrom').dirty || findRideForm.get('findFrom').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- TO LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>To</ion-label>\\n                        <input ngx-google-places-autocomplete #findTo type=\\\"text\\\" id='findTo' autocomplete='on' inputmode=\\\"text\\\" formControlName='findTo'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findTo\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findTo').hasError(validation.type) && (findRideForm.get('findTo').dirty || findRideForm.get('findTo').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- AVAILABLE SEATS  -->\\n                    <ion-item>\\n                        <ion-label stacked>Seats</ion-label>\\n                        <ion-input type=\\\"number\\\" inputmode=\\\"number\\\" formControlName='findSeats'></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findSeats\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findSeats').hasError(validation.type) && (findRideForm.get('findSeats').dirty || findRideForm.get('findSeats').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n\\n                    <ion-button type=\\\"submit\\\" expand='block' fill='solid' color='primary' [disabled]='!findRideForm.valid || isLoading'>\\n                        <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n                        <ion-text>{{findRideButtonText}}</ion-text>\\n                    </ion-button>\\n                </ion-list>\\n            </form>\\n\\n            <p class=\\\"hint\\\" *ngIf='findRideSearchResults === []'>\\n                No Results\\n            </p>\\n\\n            <div *ngIf='!findRideSearchResults && isLoading'>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n            </div>\\n\\n            <ion-list class='findRideResultList' lines='full' *ngIf='findRideSearchResults'>\\n                <ion-list-header>Search Results</ion-list-header>\\n                <ion-item class='findRideResultItem ion-activatable' *ngFor=\\\"let ride of findRideSearchResults; let i = index\\\" (click)=\\\"viewRideDetails(i)\\\">\\n                    <ion-avatar item-left>\\n                        <img src=\\\"https://picsum.photos/100\\\" *ngIf='ride.offeredBy.profilePic === undefined'>\\n                        <img [src]='ride.offeredBy.profilePic' *ngIf='ride.offeredBy.profilePic !== undefined'>\\n                    </ion-avatar>\\n                    <ion-col size='7'>\\n                        <h6 class=\\\"rideResidentName\\\"> {{ ride.offeredBy.fullname | titlecase }}</h6>\\n                        <p class=\\\"rideFromTo\\\">{{ ride.from }} - {{ ride.to }}</p>\\n                    </ion-col>\\n                    <ion-col size='3'>\\n                        <p class=\\\"rideTime\\\">\\n                            <ion-icon name=\\\"time\\\"></ion-icon>\\n                            {{ ride.time | date:'shortTime' }}\\n                        </p>\\n                        <p class=\\\"rideSeats\\\">\\n                            <ion-icon name=\\\"people\\\"></ion-icon>\\n                            {{ ride.seats }}\\n                        </p>\\n                    </ion-col>\\n                    <ion-ripple-effect></ion-ripple-effect>\\n                    <!-- {{ride.from}} -->\\n                </ion-item>\\n            </ion-list>\\n\\n        </div>\\n        <div id=\\\"offerRide\\\" [hidden]=\\\"this.segment !== 'offerRide'\\\">\\n            <form [formGroup]=\\\"offerRideForm\\\" (ngSubmit)=\\\"offerRide()\\\">\\n                <ion-list lines='full'>\\n                    <!-- FROM LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>From</ion-label>\\n                        <input ngx-google-places-autocomplete #offerFrom type=\\\"text\\\" id='offerFrom' autocomplete='on' inputmode=\\\"text\\\" formControlName='offerFrom'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerFrom\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerFrom').hasError(validation.type) && (offerRideForm.get('offerFrom').dirty || offerRideForm.get('offerFrom').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- TO LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>To</ion-label>\\n                        <input ngx-google-places-autocomplete #offerTo type=\\\"text\\\" id='offerTo' autocomplete='on' inputmode=\\\"text\\\" formControlName='offerTo'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerTo\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerTo').hasError(validation.type) && (offerRideForm.get('offerTo').dirty || offerRideForm.get('offerTo').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- RIDE DATE  -->\\n                    <ion-item>\\n                        <ion-label>Date</ion-label>\\n                        <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" pickerFormat='DD MM YYYY' formControlName='offerDate'></ion-datetime>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerDate\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerDate').hasError(validation.type) && (offerRideForm.get('offerDate').dirty || offerRideForm.get('offerDate').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- RIDE TIME  -->\\n                    <ion-item>\\n                        <ion-label>Time</ion-label>\\n                        <ion-datetime displayFormat='HH:mm' pickerFormat='HH:mm' formControlName='offerTime'></ion-datetime>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerTime\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerTime').hasError(validation.type) && (offerRideForm.get('offerTime').dirty || offerRideForm.get('offerTime').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- AVAILABLE SEATS  -->\\n                    <ion-item>\\n                        <ion-label stacked>Available Seats</ion-label>\\n                        <ion-input type=\\\"number\\\" inputmode=\\\"number\\\" formControlName='offerSeats'></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerSeats\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerSeats').hasError(validation.type) && (offerRideForm.get('offerSeats').dirty || offerRideForm.get('offerSeats').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                </ion-list>\\n\\n                <ion-button type=\\\"submit\\\" expand='block' fill='solid' color='primary' [disabled]='!offerRideForm.valid || isLoading'>\\n                    <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n                    <ion-text>{{offerRideButtonText}}</ion-text>\\n                </ion-button>\\n            </form>\\n        </div>\\n        <div id=\\\"rideHistory\\\" *ngSwitchCase=\\\"'rideHistory'\\\">\\n            <!--  -->\\n            <div *ngIf='!rideHistory'>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n            </div>\\n            <ion-list class='rideHistoryList' lines='full' *ngIf='this.rideHistory != []'>\\n                <ion-item class='rideHistoryItem ion-activatable' *ngFor=\\\"let ride of rideHistory; let i = index\\\" (click)=\\\"viewRideHistoryDetails(i)\\\">\\n                    <ion-avatar item-left>\\n                        <img src=\\\"https://picsum.photos/100\\\" *ngIf='ride.offeredBy.profilePic === undefined'>\\n                        <img [src]='ride.offeredBy.profilePic' *ngIf='ride.offeredBy.profilePic !== undefined'>\\n                    </ion-avatar>\\n                    <ion-col size='7'>\\n                        <h6 class=\\\"rideResidentName\\\"> {{ ride.offeredBy.fullname | titlecase }}</h6>\\n                        <p class=\\\"rideFromTo\\\">{{ ride.from }} - {{ ride.to }}</p>\\n                    </ion-col>\\n                    <ion-col size='3'>\\n                        <p class=\\\"rideTime\\\">\\n                            <ion-icon name=\\\"time\\\"></ion-icon>\\n                            {{ ride.time | date:'shortTime' }}\\n                        </p>\\n                        <p class=\\\"rideSeats\\\">\\n                            <ion-icon name=\\\"people\\\"></ion-icon>\\n                            {{ ride.seats }}\\n                        </p>\\n                    </ion-col>\\n                    <ion-ripple-effect></ion-ripple-effect>\\n                    <!-- {{ride.from}} -->\\n                </ion-item>\\n            </ion-list>\\n        </div>\\n    </div>\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    GooglePlaceModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class HomePageModule {}\n","export default \"ion-input,\\ninput {\\n  text-align: end !important;\\n  border: 0 !important;\\n  width: 75vw !important;\\n}\\n\\nion-button ion-spinner {\\n  margin-right: 20px !important;\\n}\\n\\n.error-container {\\n  color: var(--ion-color-danger) !important;\\n  margin: 0px 0px 0px 10px;\\n}\\n\\n.findRideResultList ion-list-header,\\n.rideHistoryList ion-list-header {\\n  background: var(--ion-color-primary);\\n  color: #fff;\\n}\\n\\n.findRideResultList .findRideResultItem,\\n.findRideResultList .rideHistoryItem,\\n.rideHistoryList .findRideResultItem,\\n.rideHistoryList .rideHistoryItem {\\n  background-color: var(--app-background-shade) !important;\\n  padding: 0px 0px 0px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-avatar,\\n.findRideResultList .rideHistoryItem ion-avatar,\\n.rideHistoryList .findRideResultItem ion-avatar,\\n.rideHistoryList .rideHistoryItem ion-avatar {\\n  height: 70px !important;\\n  width: 70px !important;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"],\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"],\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"],\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] {\\n  padding: 0px 0px 0px 5px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideResidentName {\\n  margin: 0px 0px 5px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideFromTo {\\n  margin: 0;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"],\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"],\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"],\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] {\\n  padding: 0;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"] .rideTime,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideTime,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"] .rideTime,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideTime {\\n  margin: 0px 0px 5px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideSeats {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Ncl9Gcm9zaC9EZXNrdG9wL1NlY3VyZVBhc3Mvc3JjL2FwcC9jYXJwb29saW5nL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2NhcnBvb2xpbmcvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFSSwwQkFBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURHSTtFQUNJLDZCQUFBO0FDQVI7O0FESUE7RUFDSSx5Q0FBQTtFQUNBLHdCQUFBO0FDREo7O0FETUk7O0VBQ0ksb0NBQUE7RUFDQSxXQUFBO0FDRlI7O0FESUk7Ozs7RUFFSSx3REFBQTtFQUNBLHdCQUFBO0FDQVI7O0FEQ1E7Ozs7RUFDSSx1QkFBQTtFQUNBLHNCQUFBO0FDSVo7O0FERlE7Ozs7RUFDSSx3QkFBQTtBQ09aOztBRE5ZOzs7O0VBQ0ksdUJBQUE7QUNXaEI7O0FEVFk7Ozs7RUFDSSxTQUFBO0FDY2hCOztBRFhROzs7O0VBQ0ksVUFBQTtBQ2dCWjs7QURmWTs7OztFQUNJLHVCQUFBO0FDb0JoQjs7QURsQlk7Ozs7RUFDSSxTQUFBO0FDdUJoQiIsImZpbGUiOiJzcmMvYXBwL2NhcnBvb2xpbmcvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dCxcbmlucHV0IHtcbiAgICB0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgICB3aWR0aDogNzV2dyAhaW1wb3J0YW50XG59XG5cbmlvbi1idXR0b24ge1xuICAgIGlvbi1zcGlubmVyIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4uZXJyb3ItY29udGFpbmVyIHtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcikgIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDBweCAwcHggMHB4IDEwcHg7XG59XG5cbi5maW5kUmlkZVJlc3VsdExpc3QsXG4ucmlkZUhpc3RvcnlMaXN0IHtcbiAgICBpb24tbGlzdC1oZWFkZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAuZmluZFJpZGVSZXN1bHRJdGVtLFxuICAgIC5yaWRlSGlzdG9yeUl0ZW0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hcHAtYmFja2dyb3VuZC1zaGFkZSkgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4O1xuICAgICAgICBpb24tYXZhdGFyIHtcbiAgICAgICAgICAgIGhlaWdodDogNzBweCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgd2lkdGg6IDcwcHggIWltcG9ydGFudFxuICAgICAgICB9XG4gICAgICAgIGlvbi1jb2xbc2l6ZT0nNyddIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDVweDtcbiAgICAgICAgICAgIC5yaWRlUmVzaWRlbnROYW1lIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDBweCAwcHggNXB4IDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5yaWRlRnJvbVRvIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWNvbFtzaXplPSczJ10ge1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIC5yaWRlVGltZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAucmlkZVNlYXRzIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW9uLWlucHV0LFxuaW5wdXQge1xuICB0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiA3NXZ3ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1idXR0b24gaW9uLXNwaW5uZXIge1xuICBtYXJnaW4tcmlnaHQ6IDIwcHggIWltcG9ydGFudDtcbn1cblxuLmVycm9yLWNvbnRhaW5lciB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDBweCAwcHggMHB4IDEwcHg7XG59XG5cbi5maW5kUmlkZVJlc3VsdExpc3QgaW9uLWxpc3QtaGVhZGVyLFxuLnJpZGVIaXN0b3J5TGlzdCBpb24tbGlzdC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmZpbmRSaWRlUmVzdWx0TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtLFxuLnJpZGVIaXN0b3J5TGlzdCAucmlkZUhpc3RvcnlJdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDBweCAwcHggMHB4IDBweDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tYXZhdGFyLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1hdmF0YXIsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWF2YXRhcixcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tYXZhdGFyIHtcbiAgaGVpZ2h0OiA3MHB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiA3MHB4ICFpbXBvcnRhbnQ7XG59XG4uZmluZFJpZGVSZXN1bHRMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0sXG4ucmlkZUhpc3RvcnlMaXN0IC5yaWRlSGlzdG9yeUl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSB7XG4gIHBhZGRpbmc6IDBweCAwcHggMHB4IDVweDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlUmVzaWRlbnROYW1lLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0gLnJpZGVSZXNpZGVudE5hbWUsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZVJlc2lkZW50TmFtZSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlUmVzaWRlbnROYW1lIHtcbiAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XG59XG4uZmluZFJpZGVSZXN1bHRMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZUZyb21Ubyxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlRnJvbVRvLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0gLnJpZGVGcm9tVG8sXG4ucmlkZUhpc3RvcnlMaXN0IC5yaWRlSGlzdG9yeUl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZUZyb21UbyB7XG4gIG1hcmdpbjogMDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0sXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiM1wiXSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIHtcbiAgcGFkZGluZzogMDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5yaWRlSGlzdG9yeUxpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSB7XG4gIG1hcmdpbjogMHB4IDBweCA1cHggMHB4O1xufVxuLmZpbmRSaWRlUmVzdWx0TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0gLnJpZGVTZWF0cyxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlU2VhdHMsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiM1wiXSAucmlkZVNlYXRzLFxuLnJpZGVIaXN0b3J5TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0gLnJpZGVTZWF0cyB7XG4gIG1hcmdpbjogMDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonContent, IonSegment } from '@ionic/angular';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\nimport { HoaStoreService } from '../../hoa-store.service';\nimport { ToastService } from '../../toast.service';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n  providers: [\n        HoaStoreService,\n        ToastService\n      ]\n})\nexport class HomePage implements OnInit, AfterViewInit {\n\n      @ViewChild('placesRef', {static: false}) placesRef: GooglePlaceDirective;\n      @ViewChild('content', {static: false}) content: IonContent;\n      @ViewChild('findTo', {static: false}) findTo: ElementRef;\n      @ViewChild('findFrom', {static: false}) findFrom: ElementRef;\n      @ViewChild('offerTo', {static: false}) offerTo: ElementRef;\n      @ViewChild('offerFrom', {static: false}) offerFrom: ElementRef;\n      @ViewChild('ionSegment', {static: false}) ionSegment: IonSegment;\n      offerRideForm: FormGroup;\n      findRideForm: FormGroup;\n      segment = 'findRide';\n      offerRideButtonText = 'Offer Ride';\n      findRideButtonText = 'Find Ride';\n      findRideSearchResults: any[];\n      rideHistory: any[];\n      isLoading = false;\n      profile;\n      estateUID;\n      role;\n      uid;\n      placesOptions = {\n\n      };\n      validation_messages = {\n            'offerFrom': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerTo': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerDate': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerTime': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerSeats': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findFrom': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findTo': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findSeats': [\n                  { type: 'required', message: 'Field is required.' }\n            ]\n          };\n  constructor(private store: HoaStoreService,\n              private toast: ToastService,\n              private router: Router) {\n                  this.role = this.store.getItem('hoa-role');\n                  this.uid = this.store.getItem('hoa-uid');\n        this.initFindRideForm().then(() => {\n\n            const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n                      findTo.addListener('place_changed', () => {\n                            // console.log(findTo.getPlace());\n                            // FORCE VALUE SET\n                            this.findRideForm.get('findTo').setValue(findTo.getPlace().name);\n                            console.log(this.findRideForm.get('findTo').value);\n                      });\n                      const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n                      findFrom.addListener('place_changed', () => {\n                            // console.log(findFrom.getPlace());\n                            // FORCE VALUE SET\n                            this.findRideForm.get('findFrom').setValue(findFrom.getPlace().name);\n                            console.log(this.findRideForm.get('findFrom').value);\n                      });\n\n        });\n        this.initOfferRideForm();\n      //   this.initOfferRideForm().then(() => {\n\n      //       const offerTo = new google.maps.places.Autocomplete(this.offerTo.nativeElement);\n      //       offerTo.addListener('place_changed', () => {\n      //             // console.log(offerTo.getPlace());\n      //             // FORCE VALUE SET\n      //             this.offerRideForm.get('offerTo').setValue(offerTo.getPlace().name);\n      //             console.log(this.offerRideForm.get('offerTo').value);\n      //       });\n      //       const offerFrom = new google.maps.places.Autocomplete(this.offerFrom.nativeElement);\n      //       offerFrom.addListener('place_changed', () => {\n      //             // console.log(offerFrom.getPlace());\n      //             // FORCE VALUE SET\n      //             this.offerRideForm.get('offerFrom').setValue(offerFrom.getPlace().name);\n      //             console.log(this.offerRideForm.get('offerFrom').value);\n      //       });\n\n      //   });\n        this.getProfile();\n   }\n\n   segmentChanged(e: any) {\n         console.log(e);\n      //  CHECK CURRENT SEGMENT AND APPLY GOOGLE PLACES AUTOCOMPLETE\n      // INPUT BUG FIX ACCORDINGLY\n      if (e.detail.value === 'findRide') {\n            // FIX FOR FIND RIDE SEGMENT\n            this.initFindRideForm().then(() => {\n                  const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n                  findTo.addListener('place_changed', () => {\n                        // console.log(findTo.getPlace());\n                        // FORCE VALUE SET\n                        this.findRideForm.get('findTo').setValue(findTo.getPlace().name);\n                        console.log(this.findRideForm.get('findTo').value);\n                  });\n                  const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n                  findFrom.addListener('place_changed', () => {\n                        // console.log(findFrom.getPlace());\n                        // FORCE VALUE SET\n                        this.findRideForm.get('findFrom').setValue(findFrom.getPlace().name);\n                        console.log(this.findRideForm.get('findFrom').value);\n                  });\n            });\n      } else\n      if (e.detail.value === 'offerRide') {\n            console.log('offerRide segment active');\n            console.log(this.offerFrom, this.offerTo);\n            // FIX FOR OFFER RIDE SEGMENT\n            // this.initOfferRideForm().then(() => {\n                  const offerTo = new google.maps.places.Autocomplete(this.offerTo.nativeElement);\n                  offerTo.addListener('place_changed', () => {\n                        // console.log(offerTo.getPlace());\n                        // FORCE VALUE SET\n                        this.offerRideForm.get('offerTo').setValue(offerTo.getPlace().name);\n                        console.log(this.offerRideForm.get('offerTo').value);\n                  });\n                  const offerFrom = new google.maps.places.Autocomplete(this.offerFrom.nativeElement);\n                  offerFrom.addListener('place_changed', () => {\n                        // console.log(offerFrom.getPlace());\n                        // FORCE VALUE SET\n                        this.offerRideForm.get('offerFrom').setValue(offerFrom.getPlace().name);\n                        console.log(this.offerRideForm.get('offerFrom').value);\n                  });\n            // });\n      } else {\n            // FALLBACK\n            return;\n      }\n   }\n\n   viewRideDetails(i: number) {\n      // ROUTE TO /ride-details/:ride\n      const ride = this.findRideSearchResults[i];\n\n      this.router.navigate(['ride-details', JSON.stringify(ride)]);\n   }\n\n   viewRideHistoryDetails(i: number) {\n      // ROUTE TO /ride-details/:ride\n      const ride = this.rideHistory[i];\n\n      this.router.navigate(['ride-details', JSON.stringify(ride)]);\n   }\n\n   getRideHistory() {\n      //    GET RESIDENT'S RIDE HISTORY FROM /{uid}/rides/history ROUTE\n      firebase.database().ref(`${this.role}/${this.uid}`).child('rides/history').once('value', (rides) => {\n            this.rideHistory = [];\n            for (const key in rides.val()) {\n                  if (rides.val().hasOwnProperty(key)) {\n                        const rideKey = rides.val()[key];\n                        console.log(rideKey);\n                        // GET RIDE DETAISL FROM /Carpooling/rides/{rideKey}\n                        firebase.database().ref('Carpooling/rides').child(rideKey).once('value', (ride) => {\n                              this.rideHistory.push(ride.val());\n                              console.log(ride.val());\n                              this.toast.showToast('Ride History Retrieved', '2000', 'bottom');\n                        }, (err: Error) => {\n                              console.warn(err.message);\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                        }).catch((err: Error) => {\n                              console.error(err.message);\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                        });\n                  }\n            }\n      }, (err: Error) => {\n            console.warn(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n   }\n\n   findRide() {\n         this.isLoading = true;\n         this.findRideButtonText = 'Finding Ride';\n         const searchParams = {\n               from: this.findRideForm.get('findFrom').value,\n               to: this.findRideForm.get('findTo').value,\n               seats: this.findRideForm.get('findSeats').value\n         };\n\n      // GET RIDES FROM RESIDENT'S ESTATE'S /carpooling/rides ROUTE\n      firebase.database().ref(`Estates/${this.estateUID}`).child('carpooling/rides').once('value', (estateRides) => {\n            const estateRidesVals = estateRides.val();\n            console.log(estateRidesVals);\n            this.findRideSearchResults = [];\n\n            for (const key in estateRides.val()) {\n                  if (estateRides.val().hasOwnProperty(key)) {\n                        const estateRideKey = estateRides.val()[key];\n                        console.log(estateRideKey);\n                        // GET RIDE DETAILS FROM GENERAL /Carpooling/rides ROUTE\n                        firebase.database().ref('Carpooling/rides').child(estateRideKey).once('value', (rideDetails) => {\n                              const ride = rideDetails.val();\n                              console.log(ride);\n\n                              // CHECK IF searchParams === ride.from && ride.to && ride.seats\n                              if (ride.from === searchParams.from &&\n                                  ride.to === searchParams.to &&\n                                  ride.seats === searchParams.seats) {\n                                    this.findRideSearchResults.push(ride);\n                              }\n                        }, (err) => {\n                              console.error(err);\n                        }).catch((err: Error) => {\n                              console.error(err.message);\n                        });\n                  }\n            }\n            this.isLoading = false;\n            this.content.scrollByPoint(0, 150, 1500);\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast('Found Some Rides', '2000', 'bottom');\n      }, (err) => {\n            console.log(err);\n            this.isLoading = false;\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast(err.message, '4000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.isLoading = false;\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n   }\n\n   offerRide() {\n         this.isLoading = true;\n         this.offerRideButtonText = 'Offering Ride';\n         const formData = {\n               from: this.offerRideForm.get('offerFrom').value,\n               to: this.offerRideForm.get('offerTo').value,\n               date: this.offerRideForm.get('offerDate').value,\n               time: this.offerRideForm.get('offerTime').value,\n               seats: this.offerRideForm.get('offerSeats').value,\n               offeredBy: this.profile\n         };\n            // SAVE TO GENERAL /carpooling/rides ROUTE\n            // FOR ADMIN ANALYTICS\n            firebase.database().ref(`Carpooling`).child('rides').push(formData).then((genRes) => {\n                  console.log('Ride saved to general node', genRes.key);\n\n                  // SAVE INTO RESIDENT'S ESTATE'S /carpooling/rides ROUTE\n                  firebase.database().ref(`Estates/${this.estateUID}`).child('carpooling/rides').push(genRes.key).then(() => {\n                        // SAVE TO RESIDENT'S /rides/history ROUTE\n                        firebase.database().ref(`${this.role}/${this.uid}`).child('rides/history').push(genRes.key).then(() => {\n                              this.toast.showToast('Ride Offered', '2000', 'bottom');\n                              console.log('Ride offered');\n                              this.clearOfferRideForm();\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        }, (err) => {\n                              this.toast.showToast(err, '4000', 'bottom');\n                              console.error(err);\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        }).catch((err: Error) => {\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                              console.error(err.message);\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        });\n            }, (err) => {\n                  console.error(err);\n            }).catch((err: Error) => {\n                  console.error(err.message);\n            });\n      }, (err) => {\n            this.toast.showToast(err, '4000', 'bottom');\n            console.error(err);\n            this.isLoading = false;\n            this.offerRideButtonText = 'Offer Ride';\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n            console.error(err.message);\n            this.isLoading = false;\n            this.offerRideButtonText = 'Offer Ride';\n      });\n   }\n\n   getProfile() {\n         const role = this.store.getItem('hoa-role');\n         const uid = this.store.getItem('hoa-uid');\n\n         return new Promise((resolve, reject) => {\n            firebase.database().ref(`${role}/${uid}`).once('value', (profile) => {\n                  this.estateUID = profile.val().estateUID;\n                  this.profile = profile.val();\n                  resolve(true);\n            }, (err) => {\n               // this.toast.showToast(err.message, '4000', 'bottom');\n               console.error(err.message);\n               reject(false);\n            }).catch((err: Error) => {\n               //    this.toast.showToast(err.message, '4000', 'bottom');\n               console.error(err.message);\n               reject(false);\n            });\n         }).then((res) => {\n            if (res) {\n                  this.getRideHistory();\n            }\n         }).catch((err) => {\n            console.error(err);\n         });\n   }\n\n  initFindRideForm() {\n      //   INIT offerRideForm\n      return new Promise((resolve, reject) => {\n            //   INIT findRideForm\n            this.findRideForm = new FormGroup({\n                  'findFrom': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'findTo': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'findSeats': new FormControl(1, Validators.compose([\n                        Validators.required\n                  ]))\n            });\n            resolve(true);\n      });\n  }\n\n  initOfferRideForm() {\n        return new Promise((resolve, reject) => {\n            this.offerRideForm = new FormGroup({\n                  'offerFrom': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerTo': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerDate': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerTime': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerSeats': new FormControl(1, Validators.compose([\n                        Validators.required\n                  ]))\n              });\n              resolve(true);\n        });\n  }\n\n  clearOfferRideForm() {\n        this.offerRideForm.get('offerFrom').reset();\n        this.offerRideForm.get('offerTo').reset();\n        this.offerRideForm.get('offerDate').reset();\n        this.offerRideForm.get('offerTime').reset();\n        this.offerRideForm.get('offerSeats').reset();\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n      // GOOGLE PLACES AUTOCOMPLETE FORM INPUTS\n      const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n      findTo.addListener('place_changed', () => {\n            const addr = findTo.getPlace().name;\n            console.log(findTo.getPlace());\n            // FORCE VALUE SET\n            this.findRideForm.get('findTo').setValue(addr);\n      });\n      const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n      findFrom.addListener('place_changed', () => {\n            const addr = findFrom.getPlace().name;\n            console.log(findFrom.getPlace());\n            // FORCE VALUE SET\n            this.findRideForm.get('findFrom').setValue(addr);\n      });\n}\n\nionViewWillEnter() {\n      // this.initForms();\n}\n\n}\n"],"sourceRoot":"webpack:///","file":"carpooling-home-home-module-es5.js"}