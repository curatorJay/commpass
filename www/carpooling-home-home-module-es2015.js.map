{"version":3,"sources":["./src/app/carpooling/home/home.page.html","./src/app/carpooling/home/home.module.ts","./src/app/carpooling/home/home.page.scss","./src/app/carpooling/home/home.page.ts"],"names":[],"mappings":"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","file":"carpooling-home-home-module-es2015.js","sourcesContent":["export default \"<ion-header no-border>\\n    <ion-toolbar color='primary'>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>\\n            Carpooling\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"carpooling-content\\\" #content>\\n    <ion-img src='https://sciexaminer.com/wp-content/uploads/2019/10/Carpooling-990x660.jpg' height='150px'></ion-img>\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)='segmentChanged($event)'>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"findRide\\\" color='secondary'>\\n            <ion-label color='secondary'>Find A Ride</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"offerRide\\\">\\n            <ion-label color='secondary'>Offer Ride</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button [disabled]='isLoading' value=\\\"rideHistory\\\">\\n            <ion-label color='secondary'>History</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n    <div [ngSwitch]='segment'>\\n        <div id=\\\"findRide\\\" [hidden]=\\\"this.segment !== 'findRide'\\\">\\n            <form [formGroup]=\\\"findRideForm\\\" (ngSubmit)=\\\"findRide()\\\">\\n                <ion-list lines='full'>\\n                    <!-- FROM LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>From</ion-label>\\n                        <input ngx-google-places-autocomplete #findFrom type=\\\"text\\\" id='findFrom' inputmode=\\\"text\\\" autocomplete='on' formControlName='findFrom'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findFrom\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findFrom').hasError(validation.type) && (findRideForm.get('findFrom').dirty || findRideForm.get('findFrom').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- TO LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>To</ion-label>\\n                        <input ngx-google-places-autocomplete #findTo type=\\\"text\\\" id='findTo' autocomplete='on' inputmode=\\\"text\\\" formControlName='findTo'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findTo\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findTo').hasError(validation.type) && (findRideForm.get('findTo').dirty || findRideForm.get('findTo').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- AVAILABLE SEATS  -->\\n                    <ion-item>\\n                        <ion-label stacked>Seats</ion-label>\\n                        <ion-input type=\\\"number\\\" inputmode=\\\"number\\\" formControlName='findSeats'></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.findSeats\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"findRideForm.get('findSeats').hasError(validation.type) && (findRideForm.get('findSeats').dirty || findRideForm.get('findSeats').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n\\n                    <ion-button type=\\\"submit\\\" expand='block' fill='solid' color='primary' [disabled]='!findRideForm.valid || isLoading'>\\n                        <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n                        <ion-text>{{findRideButtonText}}</ion-text>\\n                    </ion-button>\\n                </ion-list>\\n            </form>\\n\\n            <p class=\\\"hint\\\" *ngIf='findRideSearchResults === []'>\\n                No Results\\n            </p>\\n\\n            <div *ngIf='!findRideSearchResults && isLoading'>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n            </div>\\n\\n            <ion-list class='findRideResultList' lines='full' *ngIf='findRideSearchResults'>\\n                <ion-list-header>Search Results</ion-list-header>\\n                <ion-item class='findRideResultItem ion-activatable' *ngFor=\\\"let ride of findRideSearchResults; let i = index\\\" (click)=\\\"viewRideDetails(i)\\\">\\n                    <ion-avatar item-left>\\n                        <img src=\\\"https://picsum.photos/100\\\" *ngIf='ride.offeredBy.profilePic === undefined'>\\n                        <img [src]='ride.offeredBy.profilePic' *ngIf='ride.offeredBy.profilePic !== undefined'>\\n                    </ion-avatar>\\n                    <ion-col size='7'>\\n                        <h6 class=\\\"rideResidentName\\\"> {{ ride.offeredBy.fullname | titlecase }}</h6>\\n                        <p class=\\\"rideFromTo\\\">{{ ride.from }} - {{ ride.to }}</p>\\n                    </ion-col>\\n                    <ion-col size='3'>\\n                        <p class=\\\"rideTime\\\">\\n                            <ion-icon name=\\\"time\\\"></ion-icon>\\n                            {{ ride.time | date:'shortTime' }}\\n                        </p>\\n                        <p class=\\\"rideSeats\\\">\\n                            <ion-icon name=\\\"people\\\"></ion-icon>\\n                            {{ ride.seats }}\\n                        </p>\\n                    </ion-col>\\n                    <ion-ripple-effect></ion-ripple-effect>\\n                    <!-- {{ride.from}} -->\\n                </ion-item>\\n            </ion-list>\\n\\n        </div>\\n        <div id=\\\"offerRide\\\" [hidden]=\\\"this.segment !== 'offerRide'\\\">\\n            <form [formGroup]=\\\"offerRideForm\\\" (ngSubmit)=\\\"offerRide()\\\">\\n                <ion-list lines='full'>\\n                    <!-- FROM LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>From</ion-label>\\n                        <input ngx-google-places-autocomplete #offerFrom type=\\\"text\\\" id='offerFrom' autocomplete='on' inputmode=\\\"text\\\" formControlName='offerFrom'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerFrom\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerFrom').hasError(validation.type) && (offerRideForm.get('offerFrom').dirty || offerRideForm.get('offerFrom').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- TO LOCATION  -->\\n                    <ion-item>\\n                        <ion-label stacked>To</ion-label>\\n                        <input ngx-google-places-autocomplete #offerTo type=\\\"text\\\" id='offerTo' autocomplete='on' inputmode=\\\"text\\\" formControlName='offerTo'>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerTo\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerTo').hasError(validation.type) && (offerRideForm.get('offerTo').dirty || offerRideForm.get('offerTo').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- RIDE DATE  -->\\n                    <ion-item>\\n                        <ion-label>Date</ion-label>\\n                        <ion-datetime displayFormat=\\\"DD/MM/YYYY\\\" pickerFormat='DD MM YYYY' formControlName='offerDate'></ion-datetime>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerDate\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerDate').hasError(validation.type) && (offerRideForm.get('offerDate').dirty || offerRideForm.get('offerDate').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- RIDE TIME  -->\\n                    <ion-item>\\n                        <ion-label>Time</ion-label>\\n                        <ion-datetime displayFormat='HH:mm' pickerFormat='HH:mm' formControlName='offerTime'></ion-datetime>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerTime\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerTime').hasError(validation.type) && (offerRideForm.get('offerTime').dirty || offerRideForm.get('offerTime').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                    <!-- AVAILABLE SEATS  -->\\n                    <ion-item>\\n                        <ion-label stacked>Available Seats</ion-label>\\n                        <ion-input type=\\\"number\\\" inputmode=\\\"number\\\" formControlName='offerSeats'></ion-input>\\n                    </ion-item>\\n                    <div class=\\\"error-container\\\">\\n                        <ng-container *ngFor=\\\"let validation of validation_messages.offerSeats\\\">\\n                            <div class=\\\"error-message\\\" *ngIf=\\\"offerRideForm.get('offerSeats').hasError(validation.type) && (offerRideForm.get('offerSeats').dirty || offerRideForm.get('offerSeats').touched)\\\">\\n                                <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                                <span>{{ validation.message }}</span>\\n                            </div>\\n                        </ng-container>\\n                    </div>\\n                </ion-list>\\n\\n                <ion-button type=\\\"submit\\\" expand='block' fill='solid' color='primary' [disabled]='!offerRideForm.valid || isLoading'>\\n                    <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n                    <ion-text>{{offerRideButtonText}}</ion-text>\\n                </ion-button>\\n            </form>\\n        </div>\\n        <div id=\\\"rideHistory\\\" *ngSwitchCase=\\\"'rideHistory'\\\">\\n            <!--  -->\\n            <div *ngIf='!rideHistory'>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n                <ion-skeleton-text style=\\\"width: 100%; height: 70px; background-color: var(--app-background-shade)\\\"></ion-skeleton-text>\\n            </div>\\n            <ion-list class='rideHistoryList' lines='full' *ngIf='this.rideHistory != []'>\\n                <ion-item class='rideHistoryItem ion-activatable' *ngFor=\\\"let ride of rideHistory; let i = index\\\" (click)=\\\"viewRideHistoryDetails(i)\\\">\\n                    <ion-avatar item-left>\\n                        <img src=\\\"https://picsum.photos/100\\\" *ngIf='ride.offeredBy.profilePic === undefined'>\\n                        <img [src]='ride.offeredBy.profilePic' *ngIf='ride.offeredBy.profilePic !== undefined'>\\n                    </ion-avatar>\\n                    <ion-col size='7'>\\n                        <h6 class=\\\"rideResidentName\\\"> {{ ride.offeredBy.fullname | titlecase }}</h6>\\n                        <p class=\\\"rideFromTo\\\">{{ ride.from }} - {{ ride.to }}</p>\\n                    </ion-col>\\n                    <ion-col size='3'>\\n                        <p class=\\\"rideTime\\\">\\n                            <ion-icon name=\\\"time\\\"></ion-icon>\\n                            {{ ride.time | date:'shortTime' }}\\n                        </p>\\n                        <p class=\\\"rideSeats\\\">\\n                            <ion-icon name=\\\"people\\\"></ion-icon>\\n                            {{ ride.seats }}\\n                        </p>\\n                    </ion-col>\\n                    <ion-ripple-effect></ion-ripple-effect>\\n                    <!-- {{ride.from}} -->\\n                </ion-item>\\n            </ion-list>\\n        </div>\\n    </div>\\n</ion-content>\"","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    GooglePlaceModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [HomePage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class HomePageModule {}\n","export default \"ion-input,\\ninput {\\n  text-align: end !important;\\n  border: 0 !important;\\n  width: 75vw !important;\\n}\\n\\nion-button ion-spinner {\\n  margin-right: 20px !important;\\n}\\n\\n.error-container {\\n  color: var(--ion-color-danger) !important;\\n  margin: 0px 0px 0px 10px;\\n}\\n\\n.findRideResultList ion-list-header,\\n.rideHistoryList ion-list-header {\\n  background: var(--ion-color-primary);\\n  color: #fff;\\n}\\n\\n.findRideResultList .findRideResultItem,\\n.findRideResultList .rideHistoryItem,\\n.rideHistoryList .findRideResultItem,\\n.rideHistoryList .rideHistoryItem {\\n  background-color: var(--app-background-shade) !important;\\n  padding: 0px 0px 0px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-avatar,\\n.findRideResultList .rideHistoryItem ion-avatar,\\n.rideHistoryList .findRideResultItem ion-avatar,\\n.rideHistoryList .rideHistoryItem ion-avatar {\\n  height: 70px !important;\\n  width: 70px !important;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"],\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"],\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"],\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] {\\n  padding: 0px 0px 0px 5px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"] .rideResidentName,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideResidentName {\\n  margin: 0px 0px 5px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"7\\\"] .rideFromTo,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"7\\\"] .rideFromTo {\\n  margin: 0;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"],\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"],\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"],\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] {\\n  padding: 0;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"] .rideTime,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideTime,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"] .rideTime,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideTime {\\n  margin: 0px 0px 5px 0px;\\n}\\n\\n.findRideResultList .findRideResultItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.findRideResultList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.rideHistoryList .findRideResultItem ion-col[size=\\\"3\\\"] .rideSeats,\\n.rideHistoryList .rideHistoryItem ion-col[size=\\\"3\\\"] .rideSeats {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Ncl9Gcm9zaC9EZXNrdG9wL1NlY3VyZVBhc3Mvc3JjL2FwcC9jYXJwb29saW5nL2hvbWUvaG9tZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2NhcnBvb2xpbmcvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFSSwwQkFBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURHSTtFQUNJLDZCQUFBO0FDQVI7O0FESUE7RUFDSSx5Q0FBQTtFQUNBLHdCQUFBO0FDREo7O0FETUk7O0VBQ0ksb0NBQUE7RUFDQSxXQUFBO0FDRlI7O0FESUk7Ozs7RUFFSSx3REFBQTtFQUNBLHdCQUFBO0FDQVI7O0FEQ1E7Ozs7RUFDSSx1QkFBQTtFQUNBLHNCQUFBO0FDSVo7O0FERlE7Ozs7RUFDSSx3QkFBQTtBQ09aOztBRE5ZOzs7O0VBQ0ksdUJBQUE7QUNXaEI7O0FEVFk7Ozs7RUFDSSxTQUFBO0FDY2hCOztBRFhROzs7O0VBQ0ksVUFBQTtBQ2dCWjs7QURmWTs7OztFQUNJLHVCQUFBO0FDb0JoQjs7QURsQlk7Ozs7RUFDSSxTQUFBO0FDdUJoQiIsImZpbGUiOiJzcmMvYXBwL2NhcnBvb2xpbmcvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dCxcbmlucHV0IHtcbiAgICB0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDAgIWltcG9ydGFudDtcbiAgICB3aWR0aDogNzV2dyAhaW1wb3J0YW50XG59XG5cbmlvbi1idXR0b24ge1xuICAgIGlvbi1zcGlubmVyIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyMHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4uZXJyb3ItY29udGFpbmVyIHtcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcikgIWltcG9ydGFudDtcbiAgICBtYXJnaW46IDBweCAwcHggMHB4IDEwcHg7XG59XG5cbi5maW5kUmlkZVJlc3VsdExpc3QsXG4ucmlkZUhpc3RvcnlMaXN0IHtcbiAgICBpb24tbGlzdC1oZWFkZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAuZmluZFJpZGVSZXN1bHRJdGVtLFxuICAgIC5yaWRlSGlzdG9yeUl0ZW0ge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hcHAtYmFja2dyb3VuZC1zaGFkZSkgIWltcG9ydGFudDtcbiAgICAgICAgcGFkZGluZzogMHB4IDBweCAwcHggMHB4O1xuICAgICAgICBpb24tYXZhdGFyIHtcbiAgICAgICAgICAgIGhlaWdodDogNzBweCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgd2lkdGg6IDcwcHggIWltcG9ydGFudFxuICAgICAgICB9XG4gICAgICAgIGlvbi1jb2xbc2l6ZT0nNyddIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDVweDtcbiAgICAgICAgICAgIC5yaWRlUmVzaWRlbnROYW1lIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDBweCAwcHggNXB4IDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC5yaWRlRnJvbVRvIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWNvbFtzaXplPSczJ10ge1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIC5yaWRlVGltZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAucmlkZVNlYXRzIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW9uLWlucHV0LFxuaW5wdXQge1xuICB0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDtcbiAgYm9yZGVyOiAwICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiA3NXZ3ICFpbXBvcnRhbnQ7XG59XG5cbmlvbi1idXR0b24gaW9uLXNwaW5uZXIge1xuICBtYXJnaW4tcmlnaHQ6IDIwcHggIWltcG9ydGFudDtcbn1cblxuLmVycm9yLWNvbnRhaW5lciB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDBweCAwcHggMHB4IDEwcHg7XG59XG5cbi5maW5kUmlkZVJlc3VsdExpc3QgaW9uLWxpc3QtaGVhZGVyLFxuLnJpZGVIaXN0b3J5TGlzdCBpb24tbGlzdC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmZpbmRSaWRlUmVzdWx0TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtLFxuLnJpZGVIaXN0b3J5TGlzdCAucmlkZUhpc3RvcnlJdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYXBwLWJhY2tncm91bmQtc2hhZGUpICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmc6IDBweCAwcHggMHB4IDBweDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tYXZhdGFyLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1hdmF0YXIsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWF2YXRhcixcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tYXZhdGFyIHtcbiAgaGVpZ2h0OiA3MHB4ICFpbXBvcnRhbnQ7XG4gIHdpZHRoOiA3MHB4ICFpbXBvcnRhbnQ7XG59XG4uZmluZFJpZGVSZXN1bHRMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0sXG4ucmlkZUhpc3RvcnlMaXN0IC5yaWRlSGlzdG9yeUl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSB7XG4gIHBhZGRpbmc6IDBweCAwcHggMHB4IDVweDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlUmVzaWRlbnROYW1lLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0gLnJpZGVSZXNpZGVudE5hbWUsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZVJlc2lkZW50TmFtZSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlUmVzaWRlbnROYW1lIHtcbiAgbWFyZ2luOiAwcHggMHB4IDVweCAwcHg7XG59XG4uZmluZFJpZGVSZXN1bHRMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZUZyb21Ubyxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCI3XCJdIC5yaWRlRnJvbVRvLFxuLnJpZGVIaXN0b3J5TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjdcIl0gLnJpZGVGcm9tVG8sXG4ucmlkZUhpc3RvcnlMaXN0IC5yaWRlSGlzdG9yeUl0ZW0gaW9uLWNvbFtzaXplPVwiN1wiXSAucmlkZUZyb21UbyB7XG4gIG1hcmdpbjogMDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdLFxuLmZpbmRSaWRlUmVzdWx0TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0sXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiM1wiXSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIHtcbiAgcGFkZGluZzogMDtcbn1cbi5maW5kUmlkZVJlc3VsdExpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5yaWRlSGlzdG9yeUxpc3QgLmZpbmRSaWRlUmVzdWx0SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSxcbi5yaWRlSGlzdG9yeUxpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlVGltZSB7XG4gIG1hcmdpbjogMHB4IDBweCA1cHggMHB4O1xufVxuLmZpbmRSaWRlUmVzdWx0TGlzdCAuZmluZFJpZGVSZXN1bHRJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0gLnJpZGVTZWF0cyxcbi5maW5kUmlkZVJlc3VsdExpc3QgLnJpZGVIaXN0b3J5SXRlbSBpb24tY29sW3NpemU9XCIzXCJdIC5yaWRlU2VhdHMsXG4ucmlkZUhpc3RvcnlMaXN0IC5maW5kUmlkZVJlc3VsdEl0ZW0gaW9uLWNvbFtzaXplPVwiM1wiXSAucmlkZVNlYXRzLFxuLnJpZGVIaXN0b3J5TGlzdCAucmlkZUhpc3RvcnlJdGVtIGlvbi1jb2xbc2l6ZT1cIjNcIl0gLnJpZGVTZWF0cyB7XG4gIG1hcmdpbjogMDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IonContent, IonSegment } from '@ionic/angular';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n\nimport { HoaStoreService } from '../../hoa-store.service';\nimport { ToastService } from '../../toast.service';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n  providers: [\n        HoaStoreService,\n        ToastService\n      ]\n})\nexport class HomePage implements OnInit, AfterViewInit {\n\n      @ViewChild('placesRef', {static: false}) placesRef: GooglePlaceDirective;\n      @ViewChild('content', {static: false}) content: IonContent;\n      @ViewChild('findTo', {static: false}) findTo: ElementRef;\n      @ViewChild('findFrom', {static: false}) findFrom: ElementRef;\n      @ViewChild('offerTo', {static: false}) offerTo: ElementRef;\n      @ViewChild('offerFrom', {static: false}) offerFrom: ElementRef;\n      @ViewChild('ionSegment', {static: false}) ionSegment: IonSegment;\n      offerRideForm: FormGroup;\n      findRideForm: FormGroup;\n      segment = 'findRide';\n      offerRideButtonText = 'Offer Ride';\n      findRideButtonText = 'Find Ride';\n      findRideSearchResults: any[];\n      rideHistory: any[];\n      isLoading = false;\n      profile;\n      estateUID;\n      role;\n      uid;\n      placesOptions = {\n\n      };\n      validation_messages = {\n            'offerFrom': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerTo': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerDate': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerTime': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'offerSeats': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findFrom': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findTo': [\n                  { type: 'required', message: 'Field is required.' }\n            ],\n            'findSeats': [\n                  { type: 'required', message: 'Field is required.' }\n            ]\n          };\n  constructor(private store: HoaStoreService,\n              private toast: ToastService,\n              private router: Router) {\n                  this.role = this.store.getItem('hoa-role');\n                  this.uid = this.store.getItem('hoa-uid');\n        this.initFindRideForm().then(() => {\n\n            const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n                      findTo.addListener('place_changed', () => {\n                            // console.log(findTo.getPlace());\n                            // FORCE VALUE SET\n                            this.findRideForm.get('findTo').setValue(findTo.getPlace().name);\n                            console.log(this.findRideForm.get('findTo').value);\n                      });\n                      const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n                      findFrom.addListener('place_changed', () => {\n                            // console.log(findFrom.getPlace());\n                            // FORCE VALUE SET\n                            this.findRideForm.get('findFrom').setValue(findFrom.getPlace().name);\n                            console.log(this.findRideForm.get('findFrom').value);\n                      });\n\n        });\n        this.initOfferRideForm();\n      //   this.initOfferRideForm().then(() => {\n\n      //       const offerTo = new google.maps.places.Autocomplete(this.offerTo.nativeElement);\n      //       offerTo.addListener('place_changed', () => {\n      //             // console.log(offerTo.getPlace());\n      //             // FORCE VALUE SET\n      //             this.offerRideForm.get('offerTo').setValue(offerTo.getPlace().name);\n      //             console.log(this.offerRideForm.get('offerTo').value);\n      //       });\n      //       const offerFrom = new google.maps.places.Autocomplete(this.offerFrom.nativeElement);\n      //       offerFrom.addListener('place_changed', () => {\n      //             // console.log(offerFrom.getPlace());\n      //             // FORCE VALUE SET\n      //             this.offerRideForm.get('offerFrom').setValue(offerFrom.getPlace().name);\n      //             console.log(this.offerRideForm.get('offerFrom').value);\n      //       });\n\n      //   });\n        this.getProfile();\n   }\n\n   segmentChanged(e: any) {\n         console.log(e);\n      //  CHECK CURRENT SEGMENT AND APPLY GOOGLE PLACES AUTOCOMPLETE\n      // INPUT BUG FIX ACCORDINGLY\n      if (e.detail.value === 'findRide') {\n            // FIX FOR FIND RIDE SEGMENT\n            this.initFindRideForm().then(() => {\n                  const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n                  findTo.addListener('place_changed', () => {\n                        // console.log(findTo.getPlace());\n                        // FORCE VALUE SET\n                        this.findRideForm.get('findTo').setValue(findTo.getPlace().name);\n                        console.log(this.findRideForm.get('findTo').value);\n                  });\n                  const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n                  findFrom.addListener('place_changed', () => {\n                        // console.log(findFrom.getPlace());\n                        // FORCE VALUE SET\n                        this.findRideForm.get('findFrom').setValue(findFrom.getPlace().name);\n                        console.log(this.findRideForm.get('findFrom').value);\n                  });\n            });\n      } else\n      if (e.detail.value === 'offerRide') {\n            console.log('offerRide segment active');\n            console.log(this.offerFrom, this.offerTo);\n            // FIX FOR OFFER RIDE SEGMENT\n            // this.initOfferRideForm().then(() => {\n                  const offerTo = new google.maps.places.Autocomplete(this.offerTo.nativeElement);\n                  offerTo.addListener('place_changed', () => {\n                        // console.log(offerTo.getPlace());\n                        // FORCE VALUE SET\n                        this.offerRideForm.get('offerTo').setValue(offerTo.getPlace().name);\n                        console.log(this.offerRideForm.get('offerTo').value);\n                  });\n                  const offerFrom = new google.maps.places.Autocomplete(this.offerFrom.nativeElement);\n                  offerFrom.addListener('place_changed', () => {\n                        // console.log(offerFrom.getPlace());\n                        // FORCE VALUE SET\n                        this.offerRideForm.get('offerFrom').setValue(offerFrom.getPlace().name);\n                        console.log(this.offerRideForm.get('offerFrom').value);\n                  });\n            // });\n      } else {\n            // FALLBACK\n            return;\n      }\n   }\n\n   viewRideDetails(i: number) {\n      // ROUTE TO /ride-details/:ride\n      const ride = this.findRideSearchResults[i];\n\n      this.router.navigate(['ride-details', JSON.stringify(ride)]);\n   }\n\n   viewRideHistoryDetails(i: number) {\n      // ROUTE TO /ride-details/:ride\n      const ride = this.rideHistory[i];\n\n      this.router.navigate(['ride-details', JSON.stringify(ride)]);\n   }\n\n   getRideHistory() {\n      //    GET RESIDENT'S RIDE HISTORY FROM /{uid}/rides/history ROUTE\n      firebase.database().ref(`${this.role}/${this.uid}`).child('rides/history').once('value', (rides) => {\n            this.rideHistory = [];\n            for (const key in rides.val()) {\n                  if (rides.val().hasOwnProperty(key)) {\n                        const rideKey = rides.val()[key];\n                        console.log(rideKey);\n                        // GET RIDE DETAISL FROM /Carpooling/rides/{rideKey}\n                        firebase.database().ref('Carpooling/rides').child(rideKey).once('value', (ride) => {\n                              this.rideHistory.push(ride.val());\n                              console.log(ride.val());\n                              this.toast.showToast('Ride History Retrieved', '2000', 'bottom');\n                        }, (err: Error) => {\n                              console.warn(err.message);\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                        }).catch((err: Error) => {\n                              console.error(err.message);\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                        });\n                  }\n            }\n      }, (err: Error) => {\n            console.warn(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n   }\n\n   findRide() {\n         this.isLoading = true;\n         this.findRideButtonText = 'Finding Ride';\n         const searchParams = {\n               from: this.findRideForm.get('findFrom').value,\n               to: this.findRideForm.get('findTo').value,\n               seats: this.findRideForm.get('findSeats').value\n         };\n\n      // GET RIDES FROM RESIDENT'S ESTATE'S /carpooling/rides ROUTE\n      firebase.database().ref(`Estates/${this.estateUID}`).child('carpooling/rides').once('value', (estateRides) => {\n            const estateRidesVals = estateRides.val();\n            console.log(estateRidesVals);\n            this.findRideSearchResults = [];\n\n            for (const key in estateRides.val()) {\n                  if (estateRides.val().hasOwnProperty(key)) {\n                        const estateRideKey = estateRides.val()[key];\n                        console.log(estateRideKey);\n                        // GET RIDE DETAILS FROM GENERAL /Carpooling/rides ROUTE\n                        firebase.database().ref('Carpooling/rides').child(estateRideKey).once('value', (rideDetails) => {\n                              const ride = rideDetails.val();\n                              console.log(ride);\n\n                              // CHECK IF searchParams === ride.from && ride.to && ride.seats\n                              if (ride.from === searchParams.from &&\n                                  ride.to === searchParams.to &&\n                                  ride.seats === searchParams.seats) {\n                                    this.findRideSearchResults.push(ride);\n                              }\n                        }, (err) => {\n                              console.error(err);\n                        }).catch((err: Error) => {\n                              console.error(err.message);\n                        });\n                  }\n            }\n            this.isLoading = false;\n            this.content.scrollByPoint(0, 150, 1500);\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast('Found Some Rides', '2000', 'bottom');\n      }, (err) => {\n            console.log(err);\n            this.isLoading = false;\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast(err.message, '4000', 'bottom');\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.isLoading = false;\n            this.findRideButtonText = 'Find Ride';\n            this.toast.showToast(err.message, '4000', 'bottom');\n      });\n   }\n\n   offerRide() {\n         this.isLoading = true;\n         this.offerRideButtonText = 'Offering Ride';\n         const formData = {\n               from: this.offerRideForm.get('offerFrom').value,\n               to: this.offerRideForm.get('offerTo').value,\n               date: this.offerRideForm.get('offerDate').value,\n               time: this.offerRideForm.get('offerTime').value,\n               seats: this.offerRideForm.get('offerSeats').value,\n               offeredBy: this.profile\n         };\n            // SAVE TO GENERAL /carpooling/rides ROUTE\n            // FOR ADMIN ANALYTICS\n            firebase.database().ref(`Carpooling`).child('rides').push(formData).then((genRes) => {\n                  console.log('Ride saved to general node', genRes.key);\n\n                  // SAVE INTO RESIDENT'S ESTATE'S /carpooling/rides ROUTE\n                  firebase.database().ref(`Estates/${this.estateUID}`).child('carpooling/rides').push(genRes.key).then(() => {\n                        // SAVE TO RESIDENT'S /rides/history ROUTE\n                        firebase.database().ref(`${this.role}/${this.uid}`).child('rides/history').push(genRes.key).then(() => {\n                              this.toast.showToast('Ride Offered', '2000', 'bottom');\n                              console.log('Ride offered');\n                              this.clearOfferRideForm();\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        }, (err) => {\n                              this.toast.showToast(err, '4000', 'bottom');\n                              console.error(err);\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        }).catch((err: Error) => {\n                              this.toast.showToast(err.message, '4000', 'bottom');\n                              console.error(err.message);\n                              this.isLoading = false;\n                              this.offerRideButtonText = 'Offer Ride';\n                        });\n            }, (err) => {\n                  console.error(err);\n            }).catch((err: Error) => {\n                  console.error(err.message);\n            });\n      }, (err) => {\n            this.toast.showToast(err, '4000', 'bottom');\n            console.error(err);\n            this.isLoading = false;\n            this.offerRideButtonText = 'Offer Ride';\n      }).catch((err: Error) => {\n            this.toast.showToast(err.message, '4000', 'bottom');\n            console.error(err.message);\n            this.isLoading = false;\n            this.offerRideButtonText = 'Offer Ride';\n      });\n   }\n\n   getProfile() {\n         const role = this.store.getItem('hoa-role');\n         const uid = this.store.getItem('hoa-uid');\n\n         return new Promise((resolve, reject) => {\n            firebase.database().ref(`${role}/${uid}`).once('value', (profile) => {\n                  this.estateUID = profile.val().estateUID;\n                  this.profile = profile.val();\n                  resolve(true);\n            }, (err) => {\n               // this.toast.showToast(err.message, '4000', 'bottom');\n               console.error(err.message);\n               reject(false);\n            }).catch((err: Error) => {\n               //    this.toast.showToast(err.message, '4000', 'bottom');\n               console.error(err.message);\n               reject(false);\n            });\n         }).then((res) => {\n            if (res) {\n                  this.getRideHistory();\n            }\n         }).catch((err) => {\n            console.error(err);\n         });\n   }\n\n  initFindRideForm() {\n      //   INIT offerRideForm\n      return new Promise((resolve, reject) => {\n            //   INIT findRideForm\n            this.findRideForm = new FormGroup({\n                  'findFrom': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'findTo': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'findSeats': new FormControl(1, Validators.compose([\n                        Validators.required\n                  ]))\n            });\n            resolve(true);\n      });\n  }\n\n  initOfferRideForm() {\n        return new Promise((resolve, reject) => {\n            this.offerRideForm = new FormGroup({\n                  'offerFrom': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerTo': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerDate': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerTime': new FormControl('', Validators.compose([\n                        Validators.required\n                  ])),\n                  'offerSeats': new FormControl(1, Validators.compose([\n                        Validators.required\n                  ]))\n              });\n              resolve(true);\n        });\n  }\n\n  clearOfferRideForm() {\n        this.offerRideForm.get('offerFrom').reset();\n        this.offerRideForm.get('offerTo').reset();\n        this.offerRideForm.get('offerDate').reset();\n        this.offerRideForm.get('offerTime').reset();\n        this.offerRideForm.get('offerSeats').reset();\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n      // GOOGLE PLACES AUTOCOMPLETE FORM INPUTS\n      const findTo = new google.maps.places.Autocomplete(this.findTo.nativeElement);\n      findTo.addListener('place_changed', () => {\n            const addr = findTo.getPlace().name;\n            console.log(findTo.getPlace());\n            // FORCE VALUE SET\n            this.findRideForm.get('findTo').setValue(addr);\n      });\n      const findFrom = new google.maps.places.Autocomplete(this.findFrom.nativeElement);\n      findFrom.addListener('place_changed', () => {\n            const addr = findFrom.getPlace().name;\n            console.log(findFrom.getPlace());\n            // FORCE VALUE SET\n            this.findRideForm.get('findFrom').setValue(addr);\n      });\n}\n\nionViewWillEnter() {\n      // this.initForms();\n}\n\n}\n"],"sourceRoot":"webpack:///"}