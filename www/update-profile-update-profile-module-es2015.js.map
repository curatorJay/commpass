{"version":3,"sources":["./src/app/update-profile/update-profile.page.html","./src/app/update-profile/update-profile.module.ts","./src/app/update-profile/update-profile.page.scss","./src/app/update-profile/update-profile.page.ts"],"names":[],"mappings":"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","file":"update-profile-update-profile-module-es2015.js","sourcesContent":["export default \"<ion-header no-border>\\n    <ion-toolbar color='primary'>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <!-- <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons> -->\\n        <ion-title>\\n            Update Profile\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"update-profile-content\\\">\\n    <form [formGroup]=\\\"updateForm\\\" (ngSubmit)=\\\"updateProfile()\\\">\\n        <ion-list lines='full'>\\n            <!-- FULLNAME  -->\\n            <ion-item>\\n                <ion-label stacked>Fullname</ion-label>\\n                <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" formControlName='fullname'></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.fullname\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('fullname').hasError(validation.type) && (updateForm.get('fullname').dirty || updateForm.get('fullname').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- ESTATE NAME -->\\n            <ion-item>\\n                <ion-label stacked>Estate Name</ion-label>\\n                <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" formControlName='estateName' readonly></ion-input>\\n                <!-- <ion-select placeholder=\\\"Select One\\\" formControlName='estateName' readonly>\\n                    <ion-select-option *ngFor='let estate of estates' value=\\\"{{estate.name}}\\\">{{estate.name}}</ion-select-option>\\n                </ion-select> -->\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.estateName\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('estateName').hasError(validation.type) && (updateForm.get('estateName').dirty || updateForm.get('estateName').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- APARTMENT NUMBER -->\\n            <ion-item *ngIf='role !== \\\"security\\\"'>\\n                <ion-label stacked>Estate Apt Number</ion-label>\\n                <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" formControlName='estateAptNum'></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.estateAptNum\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('estateAptNum').hasError(validation.type) && (updateForm.get('estateAptNum').dirty || updateForm.get('estateAptNum').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- EMAIL -->\\n            <ion-item>\\n                <ion-label stacked>Email</ion-label>\\n                <ion-input type=\\\"email\\\" inputmode=\\\"email\\\" formControlName='email'></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('email').hasError(validation.type) && (updateForm.get('email').dirty || updateForm.get('email').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- ADDRESS -->\\n            <ion-item>\\n                <ion-label stacked>Address</ion-label>\\n                <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" formControlName='address'></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.address\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('address').hasError(validation.type) && (updateForm.get('address').dirty || updateForm.get('address').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- GENDER -->\\n            <ion-item>\\n                <ion-label>Gender</ion-label>\\n                <ion-select placeholder=\\\"Select One\\\" formControlName='gender'>\\n                    <ion-select-option value=\\\"f\\\">Female</ion-select-option>\\n                    <ion-select-option value=\\\"m\\\">Male</ion-select-option>\\n                    <ion-select-option value=\\\"other\\\">Other</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.gender\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('gender').hasError(validation.type) && (updateForm.get('gender').dirty || updateForm.get('gender').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- MARITAL STATUS -->\\n            <ion-item>\\n                <ion-label>Marital Status</ion-label>\\n                <ion-select placeholder=\\\"Select One\\\" formControlName='maritalStatus'>\\n                    <ion-select-option value=\\\"single\\\">Single</ion-select-option>\\n                    <ion-select-option value=\\\"married\\\">Married</ion-select-option>\\n                    <ion-select-option value=\\\"divorced\\\">Divorced</ion-select-option>\\n                </ion-select>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.maritalStatus\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('maritalStatus').hasError(validation.type) && (updateForm.get('maritalStatus').dirty || updateForm.get('maritalStatus').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <!-- ABOUT -->\\n            <ion-item>\\n                <ion-label stacked>About</ion-label>\\n                <ion-input type=\\\"text\\\" inputmode=\\\"text\\\" formControlName='about'></ion-input>\\n            </ion-item>\\n            <div class=\\\"error-container\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.about\\\">\\n                    <div class=\\\"error-message\\\" *ngIf=\\\"updateForm.get('about').hasError(validation.type) && (updateForm.get('about').dirty || updateForm.get('about').touched)\\\">\\n                        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n                        <span>{{ validation.message }}</span>\\n                    </div>\\n                </ng-container>\\n            </div>\\n        </ion-list>\\n\\n        <ion-button type=\\\"submit\\\" expand='block' fill='solid' color='primary' [disabled]='!updateForm.valid || isLoading'>\\n            <ion-spinner name=\\\"crescent\\\" slot='start' *ngIf='isLoading'></ion-spinner>\\n            <ion-text *ngIf='!isLoading'>Update Profile</ion-text>\\n        </ion-button>\\n    </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateProfilePage } from './update-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateProfilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdateProfilePage]\n})\nexport class UpdateProfilePageModule {}\n","export default \"ion-input {\\n  text-align: end !important;\\n}\\n\\n.error-container .error-message {\\n  margin: calc(var(--page-margin) / 2) 0px;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  color: var(--ion-color-danger);\\n  font-size: 14px;\\n}\\n\\n.error-container .error-message ion-icon {\\n  -webkit-padding-end: calc(var(--page-margin) / 2);\\n          padding-inline-end: calc(var(--page-margin) / 2);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9Ncl9Gcm9zaC9EZXNrdG9wL1NlY3VyZVBhc3Mvc3JjL2FwcC91cGRhdGUtcHJvZmlsZS91cGRhdGUtcHJvZmlsZS5wYWdlLnNjc3MiLCJzcmMvYXBwL3VwZGF0ZS1wcm9maWxlL3VwZGF0ZS1wcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDBCQUFBO0FDQ0o7O0FER0k7RUFDSSx3Q0FBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO1VBQUEsbUJBQUE7RUFDQSw4QkFBQTtFQUNBLGVBQUE7QUNBUjs7QURDUTtFQUNJLGlEQUFBO1VBQUEsZ0RBQUE7QUNDWiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1wcm9maWxlL3VwZGF0ZS1wcm9maWxlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dCB7XG4gICAgdGV4dC1hbGlnbjogZW5kICFpbXBvcnRhbnQ7XG59XG5cbi5lcnJvci1jb250YWluZXIge1xuICAgIC5lcnJvci1tZXNzYWdlIHtcbiAgICAgICAgbWFyZ2luOiBjYWxjKHZhcigtLXBhZ2UtbWFyZ2luKSAvIDIpIDBweDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGlvbi1pY29uIHtcbiAgICAgICAgICAgIHBhZGRpbmctaW5saW5lLWVuZDogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpb24taW5wdXQge1xuICB0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDtcbn1cblxuLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItbWVzc2FnZSB7XG4gIG1hcmdpbjogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKSAwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItZGFuZ2VyKTtcbiAgZm9udC1zaXplOiAxNHB4O1xufVxuLmVycm9yLWNvbnRhaW5lciAuZXJyb3ItbWVzc2FnZSBpb24taWNvbiB7XG4gIHBhZGRpbmctaW5saW5lLWVuZDogY2FsYyh2YXIoLS1wYWdlLW1hcmdpbikgLyAyKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HoaStoreService } from '../hoa-store.service';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.page.html',\n  styleUrls: ['./update-profile.page.scss'],\n  providers: [HoaStoreService]\n})\nexport class UpdateProfilePage implements OnInit {\n      updateForm: FormGroup;\n      role =  window.localStorage.getItem('hoa-role');\n      validation_messages = {\n            'fullname': [\n                  { type: 'required', message: 'Fullname is required.' }\n            ],\n            'estateName': [\n                  { type: 'required', message: 'Estate Name is required.' }\n            ],\n            'estateAptNum': [\n                  { type: 'required', message: 'Apartment Number is required.' }\n            ],\n            'email': [\n              { type: 'required', message: 'Email is required.' },\n              { type: 'pattern', message: 'Enter a valid email.' }\n            ],\n            'address': [\n                  { type: 'required', message: 'Address is required.' }\n            ],\n            'gender': [\n                  { type: 'required', message: 'Please indicate a gender.' }\n            ],\n            'maritalStatus': [\n                  { type: 'required', message: 'This field is required.' }\n            ],\n            'about': [\n                  { type: 'required', message: 'A little about yourself.'}\n            ]\n          };\n      // estateName = '';\n      // estateAptNum = '';\n      // email = '';\n      // address = '';\n      // gender = '';\n      // maritalStatus = '';\n      // about = '';\n      // fullname = '';\n      estates: any[] = [];\n      isLoading = false;\n  constructor(private router: Router,\n              private store: HoaStoreService) {\n        this.getestates(); // get estates\n        this.getProfile(); // get profile for editing\n        this.updateForm = new FormGroup({\n            'fullname': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'estateName': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'estateAptNum': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'email': new FormControl('', Validators.compose([\n              Validators.required,\n              Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n            ])),\n            'address': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'gender': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'maritalStatus': new FormControl('', Validators.compose([\n                  Validators.required\n            ])),\n            'about': new FormControl('', Validators.compose([\n                  Validators.required\n            ]))\n          });\n   }\n\nupdateProfile() {\n      this.isLoading = true;\n      // firebase.auth().currentUser.displayName = this.fullname;\n      const role = this.store.getItem('hoa-role').toString();\n      const uid = this.store.getItem('hoa-uid').toString();\n\n      firebase.database().ref(role).child(uid).update({\n            estateName: this.updateForm.get('estateName').value,\n            estateAptNum: this.updateForm.get('estateAptNum').value,\n            email: this.updateForm.get('email').value,\n            address: this.updateForm.get('address').value,\n            gender: this.updateForm.get('gender').value,\n            maritalStatus: this.updateForm.get('maritalStatus').value,\n            about: this.updateForm.get('about').value,\n            fullname: this.updateForm.get('fullname').value\n      }).then(() => {\n            console.log('User updated');\n            this.isLoading = false;\n            this.router.navigate(['app/user']);\n      }).catch((err: Error) => {\n            console.error(err.message);\n            this.isLoading = false;\n      });\n}\n\ngetestates() {\n      firebase.database().ref('Estates').once('value', (snapshot) => {\n            for (const key in snapshot.val()) {\n                  if (snapshot.val().hasOwnProperty(key)) {\n                        const estate = snapshot.val()[key];\n                        this.estates.push(estate);\n                  }\n            }\n      }, (err: Error) => {\n            console.error(err.message);\n      });\n}\n\ngetProfile() {\n      let role, uid;\n      role = this.store.getItem('hoa-role');\n      uid = this.store.getItem('hoa-uid');\n      firebase.database().ref(role).child(uid).once('value', (snapshot) => {\n            // SET INPUT TO APPROPRIATE SNAPSHOT VALUE\n            this.updateForm.get('fullname').setValue(snapshot.val().fullname || '');\n            this.updateForm.get('estateName').setValue(snapshot.val().estateName || '');\n            this.updateForm.get('estateAptNum').setValue(snapshot.val().estateAptNum || '');\n            this.updateForm.get('email').setValue(snapshot.val().email || '');\n            this.updateForm.get('address').setValue(snapshot.val().address || '');\n            this.updateForm.get('gender').setValue(snapshot.val().gender || '');\n            this.updateForm.get('maritalStatus').setValue(snapshot.val().maritalStatus || '');\n            this.updateForm.get('about').setValue(snapshot.val().about || '');\n            // this.profile = snapshot.val();\n            // this.visitors = [];\n            // this.dependents = [];\n            // GET DEPENDENT ON IF ROLE === DEPENDENT\n            // if (role === 'dependent') {\n            //       this.getDependentOn();\n            // }\n            // // GET VISITORS\n            // for (const key in snapshot.val().visitors) {\n            //       if (snapshot.val().visitors.hasOwnProperty(key)) {\n            //             const visitor = snapshot.val().visitors[key];\n            //             this.visitorsKeys.push(key);\n            //             this.visitors.push(visitor);\n            //             // firebase.database().ref(`${role}/${uid}/visitors`).child(key).on('value', snap => {\n            //             //       this.visitors.push(snap.val());\n            //             // });\n            //       }\n            // }\n            // // GET DEPENDENTS\n            // for (const key in snapshot.val().dependents) {\n            //       if (snapshot.val().dependents.hasOwnProperty(key)) {\n            //             const dependent = snapshot.val().dependents[key];\n            //             this.dependentsKeys.push(key);\n            //             this.dependents.push(dependent);\n            //             // firebase.database().ref(`${role}/${uid}/visitors`).child(key).on('value', snap => {\n            //             //       this.visitors.push(snap.val());\n            //             // });\n            //       }\n            // }\n      }).then(() => {\n            console.log('Profile retrieved successfully');\n      }).catch((err: Error) => {\n            console.error(err.message);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}